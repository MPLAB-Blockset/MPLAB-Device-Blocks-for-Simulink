<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Utility Blocks on MPLAB Blockset for MATLAB/Simulink</title><link>/block_reference/utility.html</link><description>Recent content in Utility Blocks on MPLAB Blockset for MATLAB/Simulink</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 16 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="/block_reference/utility/index.xml" rel="self" type="application/rss+xml"/><item><title>Doc</title><link>/block_reference/utility/doc.html</link><pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate><guid>/block_reference/utility/doc.html</guid><description>&lt;div class="block-icon-container">
 &lt;picture class="block-icon-image">
 &lt;source srcset="../../assets/images/blocks/utility/Doc.svg" type="image/svg+xml">
 &lt;img src="../../assets/images/blocks/utility/Doc.png" alt="Doc Block Icon">
 &lt;/picture>
 &lt;div class="block-icon-description">
 The &lt;strong>Doc&lt;/strong> block provides quick access to MCHP Blockset documentation, help files, examples, and release notes directly from the Simulink model.
 &lt;/div>
&lt;/div>

&lt;h2 id="features">Features&lt;/h2>
&lt;ul>
&lt;li>One-click access to block help&lt;/li>
&lt;li>Quick links to user guide&lt;/li>
&lt;li>Example browser&lt;/li>
&lt;li>Release notes and changelog&lt;/li>
&lt;li>Online support resources&lt;/li>
&lt;/ul>
&lt;h2 id="no-configuration-required">No Configuration Required&lt;/h2>
&lt;p>The Doc block has no parameters. Simply double-click to open the documentation menu.&lt;/p>
&lt;h2 id="available-resources">Available Resources&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Resource&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Block Reference&lt;/td>
 &lt;td>Detailed documentation for all blocks&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>User Guide&lt;/td>
 &lt;td>Getting started and tutorials&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Examples&lt;/td>
 &lt;td>Sample models for various applications&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Release Notes&lt;/td>
 &lt;td>Version history and new features&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Support Forum&lt;/td>
 &lt;td>Microchip community support&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table></description></item><item><title>MSI</title><link>/block_reference/utility/msi.html</link><pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate><guid>/block_reference/utility/msi.html</guid><description>&lt;div class="block-icon-container">
 &lt;picture class="block-icon-image">
 &lt;source srcset="../../assets/images/blocks/system_info/chip_webpage.svg" type="image/svg+xml">
 &lt;img src="../../assets/images/blocks/system_info/chip_webpage.png" alt="MSI Block Icon">
 &lt;/picture>
 &lt;div class="block-icon-description">
 The &lt;strong>MSI&lt;/strong> block configures the Master Secondary Interface (MSI) for inter-core communication in dual-core dsPIC33CH devices, enabling data exchange between master and secondary cores.
 &lt;/div>
&lt;/div>

&lt;h2 id="communication-methods">Communication Methods&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Method&lt;/th>
 &lt;th>Speed&lt;/th>
 &lt;th>Size&lt;/th>
 &lt;th>Direction&lt;/th>
 &lt;th>Use Case&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Mailboxes&lt;/td>
 &lt;td>Fast&lt;/td>
 &lt;td>16 words × 16 boxes&lt;/td>
 &lt;td>Bidirectional&lt;/td>
 &lt;td>Control parameters, flags&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>FIFO&lt;/td>
 &lt;td>Medium&lt;/td>
 &lt;td>Configurable buffer&lt;/td>
 &lt;td>Bidirectional&lt;/td>
 &lt;td>Data streaming, logs&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Protocol Interrupts&lt;/td>
 &lt;td>Immediate&lt;/td>
 &lt;td>N/A&lt;/td>
 &lt;td>Bidirectional&lt;/td>
 &lt;td>Event notification, sync&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="block-parameters">Block Parameters&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Parameter&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;th>Options&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Communication Type&lt;/td>
 &lt;td>Select MSI communication method&lt;/td>
 &lt;td>Mailbox / FIFO / Protocol Interrupt&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Mailbox Number&lt;/td>
 &lt;td>Mailbox index (0-15)&lt;/td>
 &lt;td>0 to 15&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Direction&lt;/td>
 &lt;td>Data transfer direction&lt;/td>
 &lt;td>Master→Secondary&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>FIFO Size&lt;/td>
 &lt;td>FIFO buffer size&lt;/td>
 &lt;td>16 to 256 words&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Interrupt Enable&lt;/td>
 &lt;td>Generate interrupt on data available&lt;/td>
 &lt;td>on / off&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="example-dual-core-communication">Example Dual-Core Communication&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-matlab" data-lang="matlab">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">% Master Core (33CH128MP508):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MSI_Mailbox0_Write:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">-&lt;/span> Write speed reference to Mailbox &lt;span style="color:#099">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">-&lt;/span> Trigger secondary interrupt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MSI_Mailbox1_Read:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">-&lt;/span> Read current measurement from Mailbox &lt;span style="color:#099">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">-&lt;/span> Update speed controller
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">% Secondary Core (33CH128MP508S1):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MSI_Mailbox0_Read:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">-&lt;/span> Read speed reference from Mailbox &lt;span style="color:#099">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">-&lt;/span> Execute in interrupt handler
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>MSI_Mailbox1_Write:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">-&lt;/span> Write current measurement to Mailbox &lt;span style="color:#099">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">-&lt;/span> Trigger master interrupt
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="mailbox-vs-fifo-selection">Mailbox vs FIFO Selection&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Scenario&lt;/th>
 &lt;th>Recommended&lt;/th>
 &lt;th>Reason&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Control loop parameters&lt;/td>
 &lt;td>Mailbox&lt;/td>
 &lt;td>Fast, deterministic, 16 words enough&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Sensor data streaming&lt;/td>
 &lt;td>FIFO&lt;/td>
 &lt;td>Buffered, handles variable rates&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Event flags, status&lt;/td>
 &lt;td>Mailbox&lt;/td>
 &lt;td>Immediate, small data&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Data logging&lt;/td>
 &lt;td>FIFO&lt;/td>
 &lt;td>Large buffer, non-critical timing&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Synchronization signals&lt;/td>
 &lt;td>Protocol Interrupt&lt;/td>
 &lt;td>No data, just notification&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="synchronization-example">Synchronization Example&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-matlab" data-lang="matlab">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">% Master triggers secondary task execution&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Master:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> compute_reference();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MSI_SendProtocolInterrupt(SECONDARY_START);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Secondary (Interrupt Handler):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">if&lt;/span> (protocol_interrupt &lt;span style="color:#000;font-weight:bold">==&lt;/span> SECONDARY_START)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> execute_fast_control_loop();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> MSI_SendProtocolInterrupt(TASK_COMPLETE);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">end&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">% Result: Precise task synchronization between cores&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="see-also">See Also&lt;/h2>
&lt;ul>
&lt;li>[MCHP_SECONDARY_CORE] - Secondary core configuration&lt;/li>
&lt;li>[MCHP_Master] - Dual-core device selection&lt;/li>
&lt;/ul></description></item><item><title>PortInfo</title><link>/block_reference/utility/port_info.html</link><pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate><guid>/block_reference/utility/port_info.html</guid><description>&lt;div class="block-icon-container">
 &lt;picture class="block-icon-image">
 &lt;source srcset="../../assets/images/blocks/utility/PortInfo.svg" type="image/svg+xml">
 &lt;img src="../../assets/images/blocks/utility/PortInfo.png" alt="Port Info Block Icon">
 &lt;/picture>
 &lt;div class="block-icon-description">
 The &lt;strong>PortInfo&lt;/strong> block displays a summary of GPIO port assignments and Peripheral Pin Select (PPS) mappings for all blocks in the model, helping detect conflicts and verify pin usage.
 &lt;/div>
&lt;/div>

&lt;h2 id="display-information">Display Information&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Information&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Port Assignments&lt;/td>
 &lt;td>All GPIO pins used by model with their function&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>PPS Mappings&lt;/td>
 &lt;td>Remappable peripheral assignments&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Conflicts&lt;/td>
 &lt;td>Duplicate pin assignments (highlighted in red)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Available Pins&lt;/td>
 &lt;td>Unused GPIO pins&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="example-display">Example Display&lt;/h2>
&lt;pre tabindex="0">&lt;code>PORT A:
 RA0: ADC1_AN0 (Analog Input)
 RA1: Digital Output
 RA2: UART1_TX (PPS - RP20)
 RA3: [Available]

PORT B:
 RB0: PWM1H (Fixed)
 RB1: PWM1L (Fixed)
 RB2: QEI1_A (PPS - RP2)
 ⚠️ RB3: CONFLICT - Digital Input + UART2_RX
&lt;/code>&lt;/pre>&lt;h2 id="usage">Usage&lt;/h2>
&lt;ul>
&lt;li>Add PortInfo block to model&lt;/li>
&lt;li>Double-click to open display&lt;/li>
&lt;li>Review port assignments&lt;/li>
&lt;li>Resolve any conflicts shown
&lt;strong>Conflict Resolution:&lt;/strong> Conflicts must be fixed before code generation. Change pin assignments in the conflicting peripheral blocks.&lt;/li>
&lt;/ul>
&lt;h2 id="see-also">See Also&lt;/h2>
&lt;ul>
&lt;li>[MCHP_TimerInfo] - Timer resource allocation&lt;/li>
&lt;li>[MCHP_Digital_Input] - GPIO configuration&lt;/li>
&lt;/ul></description></item><item><title>Simulink Reset Config</title><link>/block_reference/utility/simulink_reset_config.html</link><pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate><guid>/block_reference/utility/simulink_reset_config.html</guid><description>&lt;div class="block-icon-container">
 &lt;picture class="block-icon-image">
 &lt;source srcset="../../assets/images/blocks/utility/ResetConfig.svg" type="image/svg+xml">
 &lt;img src="../../assets/images/blocks/utility/ResetConfig.png" alt="Simulink Reset Config Block Icon">
 &lt;/picture>
 &lt;div class="block-icon-description">
 The &lt;strong>Simulink Reset Config&lt;/strong> block configures microcontroller reset behavior, startup initialization sequence, and watchdog timer settings.
 &lt;/div>
&lt;/div>

&lt;h2 id="configuration-parameters">Configuration Parameters&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Parameter&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;th>Options&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Reset Behavior&lt;/td>
 &lt;td>Action on system reset&lt;/td>
 &lt;td>• Initialize all variables&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Watchdog Timer&lt;/td>
 &lt;td>Configure WDT operation&lt;/td>
 &lt;td>• Enabled (auto-reset)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Startup Delay&lt;/td>
 &lt;td>Initial delay before main loop&lt;/td>
 &lt;td>0 to 1000 ms&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Brown-out Handling&lt;/td>
 &lt;td>Low voltage detection behavior&lt;/td>
 &lt;td>• Reset on brown-out&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="reset-sources">Reset Sources&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Source&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;th>Typical Handling&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Power-On Reset (POR)&lt;/td>
 &lt;td>Initial power application&lt;/td>
 &lt;td>Full initialization&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Brown-Out Reset (BOR)&lt;/td>
 &lt;td>Voltage drop detection&lt;/td>
 &lt;td>Full initialization&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Watchdog Timeout&lt;/td>
 &lt;td>WDT not serviced&lt;/td>
 &lt;td>Full reset, log error&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Software Reset&lt;/td>
 &lt;td>Intentional reset command&lt;/td>
 &lt;td>Configurable (preserve state)&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>External Reset&lt;/td>
 &lt;td>MCLR pin assertion&lt;/td>
 &lt;td>Full initialization&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="example-configuration">Example Configuration&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-matlab" data-lang="matlab">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">% Safety-critical application with WDT&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Reset Behavior: Initialize all variables
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Watchdog Timer: Enabled, &lt;span style="color:#099">1000&lt;/span>ms period
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Startup Delay: &lt;span style="color:#099">100&lt;/span>ms (allow power stabilization)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Brown&lt;span style="color:#000;font-weight:bold">-&lt;/span>out: Reset on brown&lt;span style="color:#000;font-weight:bold">-&lt;/span>out
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#998;font-style:italic">% Log reset source in EEPROM for diagnostics&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="usage-guidelines">Usage Guidelines&lt;/h2>
&lt;ul>
&lt;li>Always enable watchdog for safety-critical applications&lt;/li>
&lt;li>Use startup delay for sensor stabilization&lt;/li>
&lt;li>Log reset sources for field diagnostics&lt;/li>
&lt;li>Test all reset scenarios during validation&lt;/li>
&lt;/ul>
&lt;h2 id="see-also">See Also&lt;/h2>
&lt;ul>
&lt;li>[MCHP_Master] - Watchdog fuse configuration&lt;/li>
&lt;li>[MCHP_IdleTask] - Watchdog servicing&lt;/li>
&lt;/ul></description></item><item><title>TimerInfo</title><link>/block_reference/utility/timer_info.html</link><pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate><guid>/block_reference/utility/timer_info.html</guid><description>&lt;div class="block-icon-container">
 &lt;picture class="block-icon-image">
 &lt;source srcset="../../assets/images/blocks/utility/TimerInfo.svg" type="image/svg+xml">
 &lt;img src="../../assets/images/blocks/utility/TimerInfo.png" alt="Timer Info Block Icon">
 &lt;/picture>
 &lt;div class="block-icon-description">
 The &lt;strong>TimerInfo&lt;/strong> block visualizes timer resource allocation across all peripheral blocks, showing which timers are used, their configuration, and detecting conflicts.
 &lt;/div>
&lt;/div>

&lt;h2 id="display-information">Display Information&lt;/h2>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Information&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>Timer Allocation&lt;/td>
 &lt;td>Which peripheral uses which timer&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Timer Configuration&lt;/td>
 &lt;td>Prescaler, period, mode&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Conflicts&lt;/td>
 &lt;td>Multiple peripherals requesting same timer&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>Available Timers&lt;/td>
 &lt;td>Unused timer resources&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="example-display">Example Display&lt;/h2>
&lt;pre tabindex="0">&lt;code>Timer Resources (dsPIC33AK128MC106):

Timer1: ⚠️ CONFLICT
 - MCHP_Interrupt (Hardware Timer mode)
 - MCHP_IC1 (Input Capture)
 → Resolve: Use different timer

Timer2: PWM_HS Module
 - PWM timebase, Period=1000, Prescaler=1

Timer3: QEI1 Position Measurement
 - Speed calculation, Period=65535

Timer4: [Available]
Timer5: [Available]
&lt;/code>&lt;/pre>&lt;h2 id="usage">Usage&lt;/h2>
&lt;ul>
&lt;li>Add TimerInfo block to model&lt;/li>
&lt;li>Double-click to view allocation&lt;/li>
&lt;li>Verify no conflicts exist&lt;/li>
&lt;li>Identify available timers for new features
&lt;strong>Timer Conflicts:&lt;/strong> Must be resolved before code generation. Reconfigure peripheral blocks to use different timers.&lt;/li>
&lt;/ul>
&lt;h2 id="see-also">See Also&lt;/h2>
&lt;ul>
&lt;li>[MCHP_PortInfo] - GPIO allocation&lt;/li>
&lt;li>[Timer Blocks] - Timer peripheral blocks&lt;/li>
&lt;/ul></description></item><item><title>Utility Blocks</title><link>/block_reference/utility/utility.html</link><pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate><guid>/block_reference/utility/utility.html</guid><description>&lt;p>Utility blocks provide essential development tools including compiler configuration, resource visualization, debugging aids, and dual-core communication for dsPIC33CH devices.&lt;/p>
&lt;h2 id="compiler-and-build-tools">Compiler and Build Tools&lt;/h2>
&lt;p>&lt;strong>[]&lt;/strong>&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Block&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;th>Purpose&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>MCHP_CompilerOptimisation&lt;/td>
 &lt;td>Compiler selection, optimization levels, DFP configuration, linker options&lt;/td>
 &lt;td>Control code size, speed, and build behavior&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="resource-monitoring-and-visualization">Resource Monitoring and Visualization&lt;/h2>
&lt;p>&lt;strong>[][]&lt;/strong>&lt;/p>
&lt;table>
 &lt;thead>
 &lt;tr>
 &lt;th>Block&lt;/th>
 &lt;th>Description&lt;/th>
 &lt;th>Purpose&lt;/th>
 &lt;/tr>
 &lt;/thead>
 &lt;tbody>
 &lt;tr>
 &lt;td>MCHP_PortInfo&lt;/td>
 &lt;td>GPIO port assignment display with conflict detection&lt;/td>
 &lt;td>Verify pin usage, detect conflicts&lt;/td>
 &lt;/tr>
 &lt;tr>
 &lt;td>MCHP_TimerInfo&lt;/td>
 &lt;td>Timer resource allocation visualization&lt;/td>
 &lt;td>Track timer usage, prevent conflicts&lt;/td>
 &lt;/tr>
 &lt;/tbody>
&lt;/table>
&lt;h2 id="configuration-and-setup">Configuration and Setup&lt;/h2>
&lt;p>&lt;strong>[][]&lt;/strong>&lt;/p></description></item></channel></rss>