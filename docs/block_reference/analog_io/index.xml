<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Analog I/O Blocks on MPLAB Device Blocks for Simulink</title><link>/block_reference/analog_io/index.html</link><description>Recent content in Analog I/O Blocks on MPLAB Device Blocks for Simulink</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Thu, 16 Oct 2025 00:00:00 +0000</lastBuildDate><atom:link href="/block_reference/analog_io/index.xml" rel="self" type="application/rss+xml"/><item><title>MCHP DAC SAMx Documentation</title><link>/block_reference/analog_io/dac_samx.html</link><pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate><guid>/block_reference/analog_io/dac_samx.html</guid><description>&lt;div class="block-icon-container"&gt;
 &lt;div class="block-icon-image"&gt;
 &lt;picture&gt;
 &lt;source srcset="../../images/blocks/analog/DAC_SAMx.svg" type="image/svg+xml"&gt;&lt;source srcset="../../images/blocks/analog/DAC_SAMx_hu_104f8b18ae542768.webp" type="image/webp"&gt;
 &lt;img src="../../images/blocks/analog/DAC_SAMx.png" alt="DAC SAMx Block Icon"&gt;
 &lt;/picture&gt;
 &lt;/div&gt;

 &lt;div class="block-icon-description"&gt;
 High-performance DAC for waveform generation and precision voltage output
 &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id="block-overview"&gt;Block Overview&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;MCHP_DACC_SAMx&lt;/strong&gt; block provides access to the Digital-to-Analog Converter Controller (DACC) available in SAM E5x, SAM E7x, and SAM C2x microcontrollers. This peripheral enables high-quality analog voltage generation for applications including waveform synthesis, precision voltage references, audio output, and control signal generation.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; 10-bit or 12-bit resolution (device-dependent)
 Dual-channel independent or differential output modes
 Up to 1 MSPS conversion rate
 Internal or external voltage reference options
 Built-in waveform generation capabilities
 DMA support for continuous waveform streaming
 Low glitch energy and monotonic output
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="supported-device-families"&gt;Supported Device Families&lt;/h3&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Family&lt;/th&gt;
 &lt;th&gt;Representative Devices&lt;/th&gt;
 &lt;th&gt;Resolution&lt;/th&gt;
 &lt;th&gt;Channels&lt;/th&gt;
 &lt;th&gt;Max Rate&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;SAM E5x&lt;/td&gt;
 &lt;td&gt;SAME54P20A, SAME53J18A&lt;/td&gt;
 &lt;td&gt;12-bit&lt;/td&gt;
 &lt;td&gt;2 (DAC0, DAC1)&lt;/td&gt;
 &lt;td&gt;1 MSPS&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;SAM E7x&lt;/td&gt;
 &lt;td&gt;SAME70Q21B, SAMV71Q21B&lt;/td&gt;
 &lt;td&gt;12-bit&lt;/td&gt;
 &lt;td&gt;2 (DAC0, DAC1)&lt;/td&gt;
 &lt;td&gt;1 MSPS&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;SAM C2x&lt;/td&gt;
 &lt;td&gt;SAMC21G18A, SAMC20G18A&lt;/td&gt;
 &lt;td&gt;10-bit&lt;/td&gt;
 &lt;td&gt;2 (DAC0, DAC1)&lt;/td&gt;
 &lt;td&gt;350 kSPS&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Output Modes:&lt;/strong&gt; The DACC supports both single-ended outputs (DAC0 and DAC1 independent) and differential output mode (DAC0 - DAC1), providing flexibility for various signal generation requirements.&lt;/p&gt;</description></item><item><title>MCHP High-Speed Analog Comparator Documentation</title><link>/block_reference/analog_io/comparator_opamps_volt_ref/highspeed_analogcomparator.html</link><pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate><guid>/block_reference/analog_io/comparator_opamps_volt_ref/highspeed_analogcomparator.html</guid><description>&lt;div class="block-icon-container"&gt;
 &lt;div class="block-icon-image"&gt;
 &lt;picture&gt;
 &lt;source srcset="../../images/blocks/analog/HighSpeed_AnalogComparator.svg" type="image/svg+xml"&gt;&lt;source srcset="../../images/blocks/analog/HighSpeed_AnalogComparator_hu_9405d758d9dcfaf7.webp" type="image/webp"&gt;
 &lt;img src="../../images/blocks/analog/HighSpeed_AnalogComparator.png" alt="High-Speed Analog Comparator Block Icon"&gt;
 &lt;/picture&gt;
 &lt;/div&gt;

 &lt;div class="block-icon-description"&gt;
 Fast threshold detection and PWM integration for motor control and power applications
 &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;MCHP High-Speed Analog Comparator&lt;/strong&gt; block configures the on-chip analog comparators for fast threshold detection applications. These comparators provide critical real-time monitoring for motor control overcurrent protection, power supply fault detection, and zero-crossing detection. With response times in the nanosecond range, they can directly trigger PWM fault events without CPU intervention.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; Sub-microsecond response time for critical fault protection
 Multiple comparator instances (up to 4 per device)
 Internal DAC reference or external voltage reference
 Programmable hysteresis for noise immunity
 Direct PWM fault input integration
 Configurable output state monitoring
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="typical-applications"&gt;Typical Applications&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Overcurrent Protection:&lt;/strong&gt; Motor drive current limit detection&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Overvoltage/Undervoltage:&lt;/strong&gt; DC bus voltage monitoring&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Zero-Crossing Detection:&lt;/strong&gt; AC line synchronization&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;PWM Blanking:&lt;/strong&gt; Noise immunity during switching&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Peak Detection:&lt;/strong&gt; Signal peak monitoring&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="device-family-support"&gt;Device Family Support&lt;/h2&gt;
&lt;h4 id="dspic33ep"&gt;dsPIC33EP&lt;/h4&gt;
&lt;p&gt;1-4 Comparators&lt;/p&gt;</description></item><item><title>MCHP High-Speed Analog Comparator with Slope Compensation Documentation</title><link>/block_reference/analog_io/comparator_opamps_volt_ref/highspeed_analogcomparator_wslope.html</link><pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate><guid>/block_reference/analog_io/comparator_opamps_volt_ref/highspeed_analogcomparator_wslope.html</guid><description>&lt;div class="block-icon-container"&gt;
 &lt;div class="block-icon-image"&gt;
 &lt;picture&gt;
 &lt;source srcset="../../images/blocks/analog/HighSpeed_AnalogComparator_wSlope.svg" type="image/svg+xml"&gt;&lt;source srcset="../../images/blocks/analog/HighSpeed_AnalogComparator_wSlope_hu_91b0e41e62b25853.webp" type="image/webp"&gt;
 &lt;img src="../../images/blocks/analog/HighSpeed_AnalogComparator_wSlope.png" alt="High-Speed Analog Comparator with Slope Block Icon"&gt;
 &lt;/picture&gt;
 &lt;/div&gt;

 &lt;div class="block-icon-description"&gt;
 Advanced peak current mode control with programmable slope compensation
 &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id="overview"&gt;Overview&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;MCHP High-Speed Analog Comparator with Slope Compensation&lt;/strong&gt; block extends the standard comparator with integrated slope compensation capabilities for peak current mode control applications. This advanced feature prevents sub-harmonic oscillation in current-mode DC-DC converters and motor drives operating at duty cycles above 50%.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; All standard comparator features plus slope compensation
 Programmable compensation ramp generation
 Automatic ramp synchronization with PWM
 Variable slope adjustment for optimal stability
 Sub-microsecond response for high-frequency switching
 Integrated peak current mode control logic
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="peak-current-mode-control"&gt;Peak Current Mode Control&lt;/h3&gt;
&lt;p&gt;Peak current mode control regulates output by controlling the peak inductor current in each switching cycle. Slope compensation stabilizes the control loop when duty cycle exceeds 50%, preventing period-doubling oscillations.
&lt;strong&gt;Why Slope Compensation?&lt;/strong&gt;
In peak current mode control with D &amp;gt; 50%, the inductor current slope creates a positive feedback loop leading to sub-harmonic oscillation. Adding a compensation ramp to the current sense signal stabilizes the loop.&lt;/p&gt;</description></item><item><title>MCHP Op-Amp Documentation</title><link>/block_reference/analog_io/comparator_opamps_volt_ref/op_amp.html</link><pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate><guid>/block_reference/analog_io/comparator_opamps_volt_ref/op_amp.html</guid><description>&lt;div class="block-icon-container"&gt;
 &lt;div class="block-icon-image"&gt;
 &lt;picture&gt;
 &lt;source srcset="../../images/blocks/analog/OpAmp.svg" type="image/svg+xml"&gt;&lt;source srcset="../../images/blocks/analog/OpAmp_hu_fb5a2d1d77b1826d.webp" type="image/webp"&gt;
 &lt;img src="../../images/blocks/analog/OpAmp.png" alt="OpAmp Block Icon"&gt;
 &lt;/picture&gt;
 &lt;/div&gt;

 &lt;div class="block-icon-description"&gt;
 Integrated operational amplifiers for signal conditioning and analog processing
 &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id="block-overview"&gt;Block Overview&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;MCHP_OP_AMP&lt;/strong&gt; block provides access to the integrated operational amplifiers available in dsPIC33C, dsPIC33CH, and dsPIC33CK microcontrollers. These on-chip op-amps eliminate the need for external amplification circuitry in many applications, reducing BOM cost and board space while improving signal integrity.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; Integrated signal conditioning eliminates external op-amps
 Direct connection to ADC for optimized signal chain
 Configurable gain settings for flexible amplification
 Rail-to-rail operation for maximum dynamic range
 Low offset and drift for precision measurements
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="supported-device-families"&gt;Supported Device Families&lt;/h3&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;| Family | DOS Module | Op-Amp Instances | Key Features |
|---|---|---|---|
| dsPIC33C/CH/CK | DOS_03349_amp_pad_opamp_ctrl_upb_v1 | Up to 3 op-amps | Basic amplification, fixed gain |
| dsPIC33A | DOS_03495_amp_pad_opamp_ctrl_upb_v2_dspic33a | Up to 3 op-amps | Enhanced features, programmable gain |

**Pin Mapping:** The block automatically displays pin assignments for each op-amp instance (IN+, IN-, OUT) based on the selected device. Pin assignments are fixed in hardware and cannot be remapped. 
## Operating Modes

### 1. Voltage Follower (Buffer)
**Configuration:** Enabled with negative input internally set to 0 
- **Gain:** Unity (1×)
- **Input:** IN+ connected to signal source
- **Feedback:** Output internally connected to IN-
- **Use Case:** High-impedance buffer, isolation amplifier

### 2. Non-Inverting Amplifier
**Configuration:** Enabled with positive and negative inputs 
- **Gain:** Configured by external resistor network
- **Input:** Signal applied to IN+
- **Feedback:** Resistor divider on IN- for gain setting
- **Use Case:** Signal amplification, sensor conditioning

### 3. Inverting Amplifier
**Configuration:** Enabled with positive and negative inputs 
- **Gain:** Set by input/feedback resistor ratio
- **Input:** Signal applied to IN- through input resistor
- **Reference:** IN+ connected to ground or reference voltage
- **Use Case:** Phase inversion, current-to-voltage conversion

### 4. Differential Amplifier
**Configuration:** Enabled with positive and negative inputs 
- **Gain:** Matched resistor network for CMRR
- **Input:** Differential signal on IN+ and IN-
- **Output:** Single-ended amplified difference
- **Use Case:** Differential sensor signals, noise rejection

## Block Parameters

| Parameter | Options | Description |
|---|---|---|
| OpAmp1 | • Disabled | • Enabled with negative input internally set to 0 | • Enabled with positive and negative inputs | Configuration for first op-amp instance. When enabled, the block automatically configures AMPON (master enable) and AMPEN[0] (instance enable) bits. The mode selection determines NCHDIS[0] setting (0 = internal connection, 1 = external pins). |
| OpAmp2 | • Disabled | • Enabled with negative input internally set to 0 | • Enabled with positive and negative inputs | Configuration for second op-amp instance. Independent control of AMPEN[1] and NCHDIS[1] bits. Can be used simultaneously with OpAmp1 for dual-channel applications. |
| OpAmp3 | • Disabled | • Enabled with negative input internally set to 0 | • Enabled with positive and negative inputs | Configuration for third op-amp instance (if available on device). Controls AMPEN[2] and NCHDIS[2]. Useful for three-phase motor control or multi-channel data acquisition. |


## Register Configuration

### AMPCON1 Register
 // Op-Amp Control Register 1 AMPCON1 = (AMPON &amp;lt;&amp;lt; 15) | // Master enable (1 = enabled) (AMPSIDL &amp;lt;&amp;lt; 13) | // Stop in idle (0 = continue in idle) (NCHDIS2 &amp;lt;&amp;lt; 10) | // OpAmp3 negative channel (1 = external pin) (NCHDIS1 &amp;lt;&amp;lt; 9) | // OpAmp2 negative channel (1 = external pin) (NCHDIS0 &amp;lt;&amp;lt; 8) | // OpAmp1 negative channel (1 = external pin) (AMPEN2 &amp;lt;&amp;lt; 2) | // OpAmp3 enable (1 = enabled) (AMPEN1 &amp;lt;&amp;lt; 1) | // OpAmp2 enable (1 = enabled) (AMPEN0 &amp;lt;&amp;lt; 0); // OpAmp1 enable (1 = enabled) 
### Port Configuration
## Application Examples

### Example 1: Voltage Follower for ADC Input Buffering
**Application:** High-impedance sensor buffer // Configuration: // - OpAmp1 = &amp;#34;Enabled with negative input internally set to 0&amp;#34; // - OpAmp2 = Disabled // - OpAmp3 = Disabled // Hardware connections: // - Sensor output → OA1_IN+ (high impedance input) // - OA1_OUT → ADC channel (low impedance) // - Feedback is internal (unity gain) // Block automatically configures: AMPCON1bits.AMPON = 1; // Enable op-amp module AMPCON1bits.AMPEN0 = 1; // Enable OpAmp1 AMPCON1bits.NCHDIS0 = 0; // Internal feedback (voltage follower) // Result: Buffered sensor signal with no loading effect 
### Example 2: Non-Inverting Amplifier (Gain = 10)
**Application:** Thermocouple amplification // Configuration: // - OpAmp1 = &amp;#34;Enabled with positive and negative inputs&amp;#34; // - External resistors: R1 = 1kΩ (to GND), R2 = 9kΩ (feedback) // - Gain = 1 + (R2/R1) = 1 + (9k/1k) = 10 // Hardware connections: // - Thermocouple → OA1_IN+ // - OA1_OUT → R2 → OA1_IN- // - OA1_IN- → R1 → GND // - OA1_OUT → ADC channel // Block configuration: AMPCON1bits.AMPON = 1; // Enable op-amp module AMPCON1bits.AMPEN0 = 1; // Enable OpAmp1 AMPCON1bits.NCHDIS0 = 1; // External pin for feedback network // Result: 10× amplified thermocouple signal // Input: 5mV → Output: 50mV 
### Example 3: Differential Amplifier for Current Sensing
**Application:** High-side current measurement // Configuration: // - OpAmp1 = &amp;#34;Enabled with positive and negative inputs&amp;#34; // - Shunt resistor: 0.01Ω (100mΩ) // - Matched resistor network: R1 = R3 = 1kΩ, R2 = R4 = 10kΩ // - Differential gain = 10 // Hardware connections: // - Motor high-side → Shunt (0.01Ω) → Motor // - Shunt_High → R1 → OA1_IN+ // - Shunt_Low → R3 → GND // - OA1_IN+ → R2 → OA1_OUT // - OA1_IN- → R4 → GND // - OA1_OUT → ADC // Block configuration: AMPCON1bits.AMPON = 1; // Enable op-amp module AMPCON1bits.AMPEN0 = 1; // Enable OpAmp1 AMPCON1bits.NCHDIS0 = 1; // External resistor network // Current measurement: // Motor current: 10A → Shunt voltage: 100mV // Op-amp output: 100mV × 10 = 1V → ADC 
### Example 4: Multi-Channel Instrumentation Amplifier
**Application:** Three-phase current sensing // Configuration: // - OpAmp1 = &amp;#34;Enabled with positive and negative inputs&amp;#34; (Phase A) // - OpAmp2 = &amp;#34;Enabled with positive and negative inputs&amp;#34; (Phase B) // - OpAmp3 = &amp;#34;Enabled with positive and negative inputs&amp;#34; (Phase C) // Hardware connections (per channel): // - Shunt resistor: 0.01Ω per phase // - Differential gain: 20 (configured by external resistors) // - OA1_OUT → ADC_CH1 // - OA2_OUT → ADC_CH2 // - OA3_OUT → ADC_CH3 // Block configuration: AMPCON1bits.AMPON = 1; // Enable op-amp module AMPCON1bits.AMPEN0 = 1; // Enable OpAmp1 (Phase A) AMPCON1bits.AMPEN1 = 1; // Enable OpAmp2 (Phase B) AMPCON1bits.AMPEN2 = 1; // Enable OpAmp3 (Phase C) AMPCON1bits.NCHDIS0 = 1; // External network for all AMPCON1bits.NCHDIS1 = 1; AMPCON1bits.NCHDIS2 = 1; // Synchronized three-phase current measurement // Sample all three ADC channels simultaneously for accurate FOC 
## Design Considerations

### Gain Configuration

- **Voltage Follower:** No external components required, unity gain (1×), high input impedance
- **Non-Inverting:** Gain = 1 + (R2/R1), input impedance ≈ op-amp input impedance (very high)
- **Inverting:** Gain = -(R2/R1), input impedance = R1 (finite), inverted output phase
- **Differential:** Gain = (R2/R1) for matched resistors, requires precision resistor matching

### Bandwidth and Slew Rate


 
 Op-amp bandwidth typically ranges from 1 MHz to 10 MHz (device-dependent)
 Gain-bandwidth product limits useful frequency range at higher gains
 Slew rate limits large signal response (typically 1-10 V/μs)
 Check device datasheet for specific performance parameters

### Offset and Calibration

- **Input Offset Voltage:** Typically ±1-5 mV (device-dependent)
- **Temperature Drift:** Consider offset drift over operating temperature range
- **Calibration:** Some devices support offset trim registers (check DOS module features)
- **Mitigation:** Use AC coupling or software offset correction for critical applications

### Power Supply Considerations
**Rail-to-Rail Operation:**
- Input common-mode range typically extends from VSS to VDD - 1.5V
- Output swing typically VSS + 100mV to VDD - 100mV under light loads
- Ensure signal levels stay within op-amp linear range
- Headroom required for proper operation, especially at high frequencies

### PCB Layout Guidelines

- **Short Traces:** Keep op-amp input and feedback traces as short as possible
- **Ground Plane:** Use solid ground plane under op-amp circuitry
- **Decoupling:** Place 100nF ceramic capacitor close to VDD pin
- **Separation:** Separate analog and digital ground returns
- **Shielding:** Shield sensitive inputs from switching noise sources

## Integration with Other Blocks

### Op-Amp + ADC Chain
**Optimized Signal Path:**
- Configure MCHP_OP_AMP block for desired gain and mode
- Connect op-amp output pin to dedicated ADC input channel
- Configure MCHP_ADC block to sample from op-amp output pin
- Synchronize ADC sampling with control loop timing
- Apply digital calibration/offset correction if needed

### Op-Amp + PWM Synchronization
**Motor Control Application:**
- Use op-amps to amplify shunt resistor voltages (current sensing)
- Trigger ADC from PWM events to sample at optimal timing
- Avoid sampling during PWM switching transitions
- Use ADC trigger delay to account for op-amp settling time

### Multi-Instance Coordination
 // Example: Three-phase motor current sensing // OpAmp1 → ADC_CH1 (Phase A current) // OpAmp2 → ADC_CH2 (Phase B current) // OpAmp3 → ADC_CH3 (Phase C current) // Configure all op-amps with identical gain // Sample all ADC channels simultaneously // Ensures phase alignment for FOC algorithm 
## Troubleshooting

| Issue | Possible Causes | Solution |
|---|---|---|
| No output signal | • AMPON not set | • AMPENx not set | • Pin not configured as analog | Verify block configuration enables the desired op-amp instance. Check that MCHP_PORT is correctly configured (automatic in INITIALISATION). |
| Saturated output | • Excessive input signal | • Incorrect gain setting | • Insufficient supply headroom | Reduce input amplitude, check resistor values for correct gain, ensure VDD provides adequate headroom for output swing. |
| Oscillation | • Poor PCB layout | • Missing decoupling | • Capacitive load | Add series resistor to output (10-50Ω), improve ground plane, add decoupling capacitor close to VDD pin, reduce trace lengths. |
| DC offset error | • Input offset voltage | • Bias current effects | • Temperature drift | Apply software offset calibration, use AC coupling if DC accuracy not required, check for trim registers in device datasheet. |
| Incorrect gain | • Wrong resistor values | • Incorrect mode selection | • Loading effects | Verify resistor network matches desired gain formula, ensure NCHDIS bit matches mode (0 = internal, 1 = external), check output load impedance is much higher than feedback resistors. |

## Related Blocks

- [MCHP_HighSpeed_AnalogComparator] - Fast analog comparator for threshold detection
- [MCHP_PGA] - Programmable Gain Amplifier with digital gain control
- [MCHP_ADC_HS_SAR_dsPIC33] - High-speed ADC for digitizing op-amp outputs
- [MCHP_PWM_HS_FEP] - PWM for motor control synchronization
[← Back to Analog Blocks]
&lt;/code&gt;&lt;/pre&gt;</description></item><item><title>MCHP PGA Documentation</title><link>/block_reference/analog_io/comparator_opamps_volt_ref/pga.html</link><pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate><guid>/block_reference/analog_io/comparator_opamps_volt_ref/pga.html</guid><description>&lt;div class="block-icon-container"&gt;
 &lt;div class="block-icon-image"&gt;
 &lt;picture&gt;
 &lt;source srcset="../../images/blocks/analog/PGA.svg" type="image/svg+xml"&gt;&lt;source srcset="../../images/blocks/analog/PGA_hu_1a67ae8490f70464.webp" type="image/webp"&gt;
 &lt;img src="../../images/blocks/analog/PGA.png" alt="PGA Block Icon"&gt;
 &lt;/picture&gt;
 &lt;/div&gt;

 &lt;div class="block-icon-description"&gt;
 Digitally-controlled gain amplifier with calibration for precision analog signal conditioning
 &lt;/div&gt;
&lt;/div&gt;

&lt;h2 id="block-overview"&gt;Block Overview&lt;/h2&gt;
&lt;p&gt;The &lt;strong&gt;MCHP_PGA&lt;/strong&gt; block provides access to the Programmable Gain Amplifier (PGA) peripheral available in select dsPIC33C, dsPIC33CH, and dsPIC33CK devices. The PGA offers digitally-controlled gain settings with calibration capabilities, enabling precision signal conditioning for sensor inputs and ADC front-end applications.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; Software-configurable gain: 1×, 2×, 4×, 8×, 16×, 32× (device-dependent)
 Runtime gain adjustment via block input or register write
 Offset and gain calibration registers for precision measurements
 Direct connection to DACOUT pins or internal ADC inputs
 Single-ended or differential input modes
 Eliminates external amplifier circuits and reduces BOM cost
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id="supported-device-families"&gt;Supported Device Families&lt;/h3&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Family&lt;/th&gt;
 &lt;th&gt;DOS Module&lt;/th&gt;
 &lt;th&gt;PGA Instances&lt;/th&gt;
 &lt;th&gt;Gain Range&lt;/th&gt;
 &lt;th&gt;Output Options&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;dsPIC33C/CH/CK&lt;/td&gt;
 &lt;td&gt;DOS_02291_PGA&lt;/td&gt;
 &lt;td&gt;2 PGA channels&lt;/td&gt;
 &lt;td&gt;1×, 2×, 4×, 8×, 16×, 32×&lt;/td&gt;
 &lt;td&gt;DACOUT1, DACOUT2, Internal&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;Output Routing:&lt;/strong&gt; PGA outputs can be routed to DACOUT pins (for external ADC or monitoring) or kept internal (for direct connection to on-chip ADC). The block automatically configures pin assignments based on your selection.&lt;/p&gt;</description></item></channel></rss>