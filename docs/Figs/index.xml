<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Figs on MPLAB Blockset for MATLAB/Simulink</title>
    <link>/figs.html</link>
    <description>Recent content in Figs on MPLAB Blockset for MATLAB/Simulink</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Oct 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="/figs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Block-to-Code Highlighting Message</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/rtwmsg.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/rtwmsg.html</guid>
      <description>&lt;p&gt;Block-to-Code Highlighting Message&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;hilite_warning.png&#34; alt=&#34;&#34;&gt;&#xA;Code for &amp;lsquo;%s&amp;rsquo; cannot be traced because traceability information is not found.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;hilite_warning.png&#34; alt=&#34;&#34;&gt;&#xA;&amp;lsquo;%s&amp;rsquo; is a virtual block. Code is not generated for virtual blocks.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;hilite_warning.png&#34; alt=&#34;&#34;&gt;&#xA;&amp;lsquo;%s&amp;rsquo; is reduced during model compilation. Code is not generated for reduced blocks.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;hilite_warning.png&#34; alt=&#34;&#34;&gt;&#xA;Code for &amp;lsquo;%s&amp;rsquo; is from reusable function and cannot be traced.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;hilite_warning.png&#34; alt=&#34;&#34;&gt;&#xA;&amp;lsquo;%s&amp;rsquo; is outside of source subsystem and cannot be traced.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;hilite_warning.png&#34; alt=&#34;&#34;&gt;&#xA;&amp;lsquo;%s&amp;rsquo; contains illegal character (single quote) that disables model-to-code navigation. Remove single quote from block name and rebuild model.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Code Generation Report for &#39;Explorer16_33FJ256GP710_DataScaling&#39;</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_survey.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_survey.html</guid>
      <description>&lt;p&gt;Code Generation Report for &amp;lsquo;Explorer16_33FJ256GP710_DataScaling&amp;rsquo;&lt;/p&gt;&#xA;&lt;h3 id=&#34;summary&#34;&gt;Summary&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Model version&lt;/th&gt;&#xA;          &lt;th&gt;1.51&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Simulink Coder version&lt;/td&gt;&#xA;          &lt;td&gt;8.6 (R2014a) 27-Dec-2013&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;C source code generated on&lt;/td&gt;&#xA;          &lt;td&gt;Thu May 01 21:51:42 2014&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Configuration settings at the time of code generation:&lt;/th&gt;&#xA;          &lt;th&gt;click to open&lt;/th&gt;&#xA;          &lt;th&gt;click to open&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Code generation objectives:&lt;/td&gt;&#xA;          &lt;td&gt;Unspecified&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Validation result: Not run&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Code Interface Report for Explorer16_33FJ256GP710_DataScaling</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_interface.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_interface.html</guid>
      <description>&lt;p&gt;function rtwTableShrink(o) {var t = o.nextSibling;if (t.nodeType != 1) {t = t.nextSibling;}if (t.style.display == &amp;ldquo;none&amp;rdquo;) {t.style.display = &amp;ldquo;&amp;quot;;o.innerHTML = &amp;ldquo;[-]&amp;rdquo;} else {t.style.display = &amp;ldquo;none&amp;rdquo;;o.innerHTML = &amp;ldquo;[+] &amp;hellip; &amp;ldquo;}} Code Interface Report for Explorer16_33FJ256GP710_DataScaling&lt;/p&gt;&#xA;&lt;h3 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Entry Point Functions ]&lt;/li&gt;&#xA;&lt;li&gt;Inports ]&lt;/li&gt;&#xA;&lt;li&gt;Outports ]&lt;/li&gt;&#xA;&lt;li&gt;Interface Parameters ]&lt;/li&gt;&#xA;&lt;li&gt;Data Stores ]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;entry-point-functions-&#34;&gt;Entry Point Functions ]&lt;/h3&gt;&#xA;&lt;p&gt;Function: [Explorer16_33FJ256GP710_DataScaling_initialize]&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Prototype&lt;/th&gt;&#xA;          &lt;th&gt;void Explorer16_33FJ256GP710_DataScaling_initialize(void)&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Description&lt;/td&gt;&#xA;          &lt;td&gt;Initialization entry point of generated code&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Timing&lt;/td&gt;&#xA;          &lt;td&gt;Called once&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Arguments&lt;/td&gt;&#xA;          &lt;td&gt;None&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Return value&lt;/td&gt;&#xA;          &lt;td&gt;None&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Header file&lt;/td&gt;&#xA;          &lt;td&gt;Explorer16_33FJ256GP710_DataScaling.h&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;Function: [Explorer16_33FJ256GP710_DataScaling_step]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Code replacements in Explorer16_33FJ256GP710_DataScaling</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_replacements.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_replacements.html</guid>
      <description>&lt;p&gt;Code replacements in Explorer16_33FJ256GP710_DataScaling&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;hilite_warning.png&#34; alt=&#34;&#34;&gt;&#xA;Code replacements report not generated. Select &amp;lsquo;Summarize which blocks triggered code replacements&amp;rsquo; in the Configuration Parameters &amp;gt; Code Generation &amp;gt; Report pane and then rebuild the model.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Explorer16 33Fj256Gp710 Datascaling Contents</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_contents.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_contents.html</guid>
      <description>&lt;p&gt;function rtwFileListShrink(o, category, numFiles) { var indent = document.getElementById(category + &amp;ldquo;_indent&amp;rdquo;); var fileTable = document.getElementById(category + &amp;ldquo;_table&amp;rdquo;); var catName = document.getElementById(category + &amp;ldquo;_name&amp;rdquo;); if (fileTable.style.display == &amp;ldquo;none&amp;rdquo;) { fileTable.style.display = &amp;ldquo;&amp;rdquo;; indent.style.display = &amp;ldquo;&amp;rdquo;; o.innerHTML = &amp;lsquo;&lt;span style=&#34;font-family:monospace&#34; id = &#34;&#39; + category + &#39;_button&#34;&gt;[-]&lt;/span&gt;&amp;rsquo;; catName.innerHTML = &amp;ldquo;&lt;b&gt;&amp;rdquo; + category + &amp;ldquo;&lt;/b&gt;&amp;rdquo;; } else { fileTable.style.display = &amp;ldquo;none&amp;rdquo;; indent.style.display = &amp;ldquo;none&amp;rdquo;; o.innerHTML = &amp;lsquo;&lt;span style=&#34;font-family:monospace&#34; id = &#34;&#39; + category + &#39;_button&#34;&gt;[+]&lt;/span&gt;&amp;rsquo;; catName.innerHTML = &amp;ldquo;&lt;b&gt;&amp;rdquo; + category + &amp;quot; (&amp;quot; + numFiles + &amp;ldquo;)&amp;rdquo; + &amp;ldquo;&lt;/b&gt;&amp;rdquo;; } } [][][][][][][]&lt;/p&gt;</description>
    </item>
    <item>
      <title>Explorer16_33FJ256GP710_DataScaling Code Generation Report</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_codegen_rpt.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_codegen_rpt.html</guid>
      <description></description>
    </item>
    <item>
      <title>Non-virtual subsystems in Explorer16_33FJ256GP710_DataScaling</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_subsystems.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_subsystems.html</guid>
      <description>&lt;p&gt;Non-virtual subsystems in Explorer16_33FJ256GP710_DataScaling&lt;/p&gt;&#xA;&lt;h3 id=&#34;1-code-mapping-hide&#34;&gt;1. Code Mapping [hide]&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;The following table:&lt;/th&gt;&#xA;          &lt;th&gt;provides a mapping from the non-virtual subsystems in the model to functions or reusable functions in the generated code and&lt;/th&gt;&#xA;          &lt;th&gt;notes exceptions that caused some non-virtual subsystems to not reuse code even though they were assigned a function packaging setting (&amp;lsquo;Function packaging&amp;rsquo; entry on the Subsystem Block Dialog) of &amp;lsquo;Auto&amp;rsquo; or &amp;lsquo;Reusable function&amp;rsquo;.&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;No non-virtual subsystems generating functions in model&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;2-code-reuse-exceptions-hide&#34;&gt;2. Code Reuse Exceptions [hide]&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;The following section provides details on each exception that caused a non-virtual subsystem with a function packaging setting of&lt;/th&gt;&#xA;          &lt;th&gt;&amp;lsquo;Auto&amp;rsquo; to become an inlined code segment,&lt;/th&gt;&#xA;          &lt;th&gt;&amp;lsquo;Auto&amp;rsquo; to become a non-reusable function without arguments, or&lt;/th&gt;&#xA;          &lt;th&gt;&amp;lsquo;Reusable function&amp;rsquo; to become a non-reusable function without arguments.&lt;/th&gt;&#xA;          &lt;th&gt;Note:&lt;/th&gt;&#xA;          &lt;th&gt;This section does not report graphically identical non-virtual subsystems marked as &amp;lsquo;Auto&amp;rsquo; that were not reused due to differences in their functional properties (such as dimensions, datatypes, work vectors, parameters, etc.).  You may identify reasons for non-reuse in such cases by inspecting the differences in the functional attributes of the subsystems in the model or in the inlined generated code.&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;No reuse exception in model&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>RTW Report - Explorer16_33FJ256GP710_DataScaling_data.c</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_data_c.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_data_c.html</guid>
      <description>&lt;h4 id=&#34;heading&#34;&gt;[]&lt;/h4&gt;&#xA;&lt;p&gt;]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]][]]]][]]]][]]]][]]]]]]]]]&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#099&#34;&gt;1&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*--------------------------------------------------------------&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;2&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   Embedded Coder &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; Microchip dsPIC family.                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;3&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   Generate .c and .h files from Simulink model              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;4&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   and compile to .elf, .hex and .cof file that can be       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;5&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   flashed into the microcontroller                          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;6&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;7&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;      The Microchip name PIC, dsPIC, and MPLAB are           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;8&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;      registered trademarks of Microchip Technology Inc.     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;9&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;      MATLAB, Simulink, and Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop are           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;10&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;      registered trademarks of The MathWorks, Inc.           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;11&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;12&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;  Blockset authors: L.Kerhuel, U.Kumar                       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;13&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;  Microchip website: http:&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;//&lt;/span&gt;www.microchip.com&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&lt;/span&gt;SimulinkBlocks &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;14&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;15&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*--------------------------------------------------------------&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;16&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;17&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;18&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; File: Explorer16_33FJ256GP710_DataScaling_data.c   &lt;span style=&#34;color:#099&#34;&gt;19&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;20&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop code generated &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; Simulink model Explorer16_33FJ256GP710_DataScaling.   &lt;span style=&#34;color:#099&#34;&gt;21&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;22&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Model version                        : &lt;span style=&#34;color:#099&#34;&gt;1.51&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;23&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop file version      : &lt;span style=&#34;color:#099&#34;&gt;8.6&lt;/span&gt; (R2014a) &lt;span style=&#34;color:#099&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Dec&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#099&#34;&gt;2013&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;24&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop file generated on : Thu May &lt;span style=&#34;color:#099&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;21&lt;/span&gt;:&lt;span style=&#34;color:#099&#34;&gt;51&lt;/span&gt;:&lt;span style=&#34;color:#099&#34;&gt;41&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;2014&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;25&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; TLC version                          : &lt;span style=&#34;color:#099&#34;&gt;8.6&lt;/span&gt; (Jan &lt;span style=&#34;color:#099&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;2014&lt;/span&gt;)   &lt;span style=&#34;color:#099&#34;&gt;26&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; C source code generated on           : Thu May &lt;span style=&#34;color:#099&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;21&lt;/span&gt;:&lt;span style=&#34;color:#099&#34;&gt;51&lt;/span&gt;:&lt;span style=&#34;color:#099&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;2014&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;27&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;28&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;29&lt;/span&gt;   #include&amp;#34;Explorer16_33FJ256GP710_DataScaling.h&amp;#34;   &lt;span style=&#34;color:#099&#34;&gt;30&lt;/span&gt;   #include&amp;#34;Explorer16_33FJ256GP710_DataScaling_private.h&amp;#34;   &lt;span style=&#34;color:#099&#34;&gt;31&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;32&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Block parameters (auto storage) &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;33&lt;/span&gt;   Parameters_Explorer16_33FJ256GPExplorer16_33FJ256GP710_DataS_P = {   &lt;span style=&#34;color:#099&#34;&gt;34&lt;/span&gt;     &lt;span style=&#34;color:#099&#34;&gt;19190&lt;/span&gt;U,                              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Computed Parameter: Saturation595ofOC1max_UpperSat   &lt;span style=&#34;color:#099&#34;&gt;35&lt;/span&gt;                                           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Referenced by: &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;Root&amp;gt;/Saturation [5% 95%] of OC1max&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;36&lt;/span&gt;                                           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;37&lt;/span&gt;     &lt;span style=&#34;color:#099&#34;&gt;1010&lt;/span&gt;U,                               &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Computed Parameter: Saturation595ofOC1max_LowerSat   &lt;span style=&#34;color:#099&#34;&gt;38&lt;/span&gt;                                           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Referenced by: &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;Root&amp;gt;/Saturation [5% 95%] of OC1max&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;39&lt;/span&gt;                                           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;40&lt;/span&gt;     &lt;span style=&#34;color:#099&#34;&gt;40410&lt;/span&gt;U                               &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Computed Parameter: Scaling_Gain   &lt;span style=&#34;color:#099&#34;&gt;41&lt;/span&gt;                                           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Referenced by: &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;Root&amp;gt;/Scaling&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;42&lt;/span&gt;                                           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;43&lt;/span&gt;   };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;44&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;45&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; File trailer &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop generated code.   &lt;span style=&#34;color:#099&#34;&gt;46&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;47&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; [EOF]   &lt;span style=&#34;color:#099&#34;&gt;48&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;49&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;File:&lt;/th&gt;&#xA;          &lt;th&gt;Explorer16_33FJ256GP710_DataScaling_data.c&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>RTW Report - Explorer16_33FJ256GP710_DataScaling_main.c</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_main_c.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_main_c.html</guid>
      <description>&lt;h4 id=&#34;heading&#34;&gt;[]&lt;/h4&gt;&#xA;&lt;p&gt;]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]][]]]]]]]]]]]]]]]]]]]]]]]]]]][]]]]]]]]]]]]]]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1   /*--------------------------------------------------------------    2    *   Embedded Coder for Microchip dsPIC family.                *    3    *   Generate .c and .h files from Simulink model              *    4    *   and compile to .elf, .hex and .cof file that can be       *    5    *   flashed into the microcontroller                          *    6    *                                                             *    7    *      The Microchip name PIC, dsPIC, and MPLAB are           *    8    *      registered trademarks of Microchip Technology Inc.     *    9    *      MATLAB, Simulink, and Real-Time Workshop are           *   10    *      registered trademarks of The MathWorks, Inc.           *   11    *                                                             *   12    *  Blockset authors: L.Kerhuel, U.Kumar                       *   13    *  Microchip website: http://www.microchip.com/SimulinkBlocks *   14    *                                                             *   15    *--------------------------------------------------------------   16    */   17   /*   18    * File: Explorer16_33FJ256GP710_DataScaling_main.c   19    *   20    * Real-Time Workshop code generated for Simulink model Explorer16_33FJ256GP710_DataScaling.   21    *   22    * Model version                        : 1.51   23    * Real-Time Workshop file version      : 8.6 (R2014a) 27-Dec-2013   24    * Real-Time Workshop file generated on : Thu May 01 21:51:41 2014   25    * TLC version                          : 8.6 (Jan 30 2014)   26    * C source code generated on           : Thu May 01 21:51:42 2014   27    */   28      29   #include&amp;#34;Explorer16_33FJ256GP710_DataScaling.h&amp;#34;   30      31   /* Microchip Global Variables */   32   volatileunsignedintContinueTimeStep = 0;&#xD;&#xA;   33      34   /* Set Fuses Options */   35   _FOSCSEL( FNOSC_PRI ) ;&#xD;&#xA;   36   _FOSC( POSCMD_XT &amp;amp; OSCIOFNC_ON &amp;amp; FCKSM_CSECMD ) ;&#xD;&#xA;   37   _FWDT( WDTPOST_PS32768 &amp;amp; FWDTEN_OFF ) ;&#xD;&#xA;   38   _FICD( JTAGEN_OFF ) ;&#xD;&#xA;   39      40   /* Solver mode : SingleTasking */   41   intmain()&#xD;&#xA;   42   {   43   /* Initialize model */   44   /* Chip L1 = FJ   L2 =GP*/   45      46   /* Start Clock Switching */   47   if ((OSCCONbits.COSC &amp;amp; 1) &amp;amp;&amp;amp; !(OSCCONbits.COSC &amp;amp; 4))/* check not already in PLL mode (0?1) */   48   {   49       __builtin_write_OSCCONH(0);        /* Clock Switch to non PLL mode */   50       __builtin_write_OSCCONL(0x01);     /* Start clock switching */   51       asm(&amp;#34;nop&amp;#34;);&#xD;&#xA;   52       asm(&amp;#34;nop&amp;#34;);&#xD;&#xA;   53   while (OSCCONbits.COSC != 0) ;&#xD;&#xA;   54   }   55      56     PLLFBD = 0x63;                       /* configure Oscillator PLL : PLLDIV */   57     CLKDIV = 0x43;                       /* configure Oscillator PLL : FRCDIV ; PLLPOST ; PLLPRE */   58     __builtin_write_OSCCONH(3);          /* Clock Switch to desired configuration */   59     __builtin_write_OSCCONL(0x01);       /* Start clock switching */   60      61   /* Configure Pins as Analog or Digital */   62     AD1PCFGL = 0;&#xD;&#xA;   63     AD2PCFGL = 0x00;                     /* Chip with 2 ADC */   64      65   /* Configure Remappables Pins */   66      67   /* Configure Digitals I/O directions */   68     TRISD = 0xFFFE;&#xD;&#xA;   69      70   /* Finish clock switching procedure */   71   while (OSCCONbits.COSC != 3) ;       /* Wait for Oscillator Stabilisation */   72   while (OSCCONbits.LOCK != 1) ;       /* Wait for PLL Stabilisation */   73      74   /* Initialize model */   75   Explorer16_33FJ256GP710_DataScaling_initialize();&#xD;&#xA;   76      77   /* Configure Timers */   78      79   /* Configuration for TIMER 2 */   80     PR2 = 0xFFFF;                        /* Period */   81     T2CON = 0x8000;&#xD;&#xA;   82      83   /* Configuration for TIMER 5 */   84     _T5IP = 2;&#xD;&#xA;   85     _T5IF = 0;&#xD;&#xA;   86     _T5IE = 1;                           /* Enable Timer interrupt */   87     PR5 = 0x4EE7;                        /* Period */   88     T5CON = 0x8000;&#xD;&#xA;   89      90   /* Main Loop */   91   for (;;) {   92   while (!ContinueTimeStep) ;&#xD;&#xA;   93   ContinueTimeStep--;&#xD;&#xA;   94      95   /* Call model Scheduler */   96   {   97   /* Step the model for base rate */   98   /* Start profiling task 0 */   99   Explorer16_33FJ256GP710_DataScaling_step();&#xD;&#xA;  100     101   /* Get model outputs here */  102     103   /* Stop profiling task 0 */  104   }  105   }/* End for(;;) */  106   }  107     108   /* File trailer for Real-Time Workshop generated code.  109    *  110    * [EOF]  111    */  112&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;File:&lt;/th&gt;&#xA;          &lt;th&gt;Explorer16_33FJ256GP710_DataScaling_main.c&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>RTW Report - Explorer16_33FJ256GP710_DataScaling_private.h</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_private_h.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_private_h.html</guid>
      <description>&lt;h4 id=&#34;heading&#34;&gt;[]&lt;/h4&gt;&#xA;&lt;p&gt;]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]][][]][]][]][][]]]]]]]]]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1   /*--------------------------------------------------------------    2    *   Embedded Coder for Microchip dsPIC family.                *    3    *   Generate .c and .h files from Simulink model              *    4    *   and compile to .elf, .hex and .cof file that can be       *    5    *   flashed into the microcontroller                          *    6    *                                                             *    7    *      The Microchip name PIC, dsPIC, and MPLAB are           *    8    *      registered trademarks of Microchip Technology Inc.     *    9    *      MATLAB, Simulink, and Real-Time Workshop are           *   10    *      registered trademarks of The MathWorks, Inc.           *   11    *                                                             *   12    *  Blockset authors: L.Kerhuel, U.Kumar                       *   13    *  Microchip website: http://www.microchip.com/SimulinkBlocks *   14    *                                                             *   15    *--------------------------------------------------------------   16    */   17   /*   18    * File: Explorer16_33FJ256GP710_DataScaling_private.h   19    *   20    * Real-Time Workshop code generated for Simulink model Explorer16_33FJ256GP710_DataScaling.   21    *   22    * Model version                        : 1.51   23    * Real-Time Workshop file version      : 8.6 (R2014a) 27-Dec-2013   24    * Real-Time Workshop file generated on : Thu May 01 21:51:41 2014   25    * TLC version                          : 8.6 (Jan 30 2014)   26    * C source code generated on           : Thu May 01 21:51:42 2014   27    */   28   #ifndef RTW_HEADER_Explorer16_33FJ256GP710_DataScaling_private_h_&#xD;&#xA;   29   #define RTW_HEADER_Explorer16_33FJ256GP710_DataScaling_private_h_&#xD;&#xA;   30   #include&amp;#34;rtwtypes.h&amp;#34;   31   #ifndef UCHAR_MAX&#xD;&#xA;   32   #include&amp;lt;limits.h&amp;gt;   33   #endif   34      35   #if ( UCHAR_MAX != (0xFFU) ) || ( SCHAR_MAX != (0x7F) )&#xD;&#xA;   36   #error &amp;#34;Code was generated for compiler with different sized uchar/char. Consider adjusting Emulation Hardware word size settings on the Hardware Implementation pane to match your compiler word sizes as defined in the compiler&amp;#39;s limits.h header file. Alternatively, you can select &amp;#39;None&amp;#39; for Emulation Hardware and select the &amp;#39;Enable portable word sizes&amp;#39; option for ERT based targets, which will disable the preprocessor word size checks.&amp;#34;&#xD;&#xA;   37   #endif   38      39   #if ( USHRT_MAX != (0xFFFFU) ) || ( SHRT_MAX != (0x7FFF) )&#xD;&#xA;   40   #error &amp;#34;Code was generated for compiler with different sized ushort/short. Consider adjusting Emulation Hardware word size settings on the Hardware Implementation pane to match your compiler word sizes as defined in the compilers limits.h header file. Alternatively, you can select &amp;#39;None&amp;#39; for Emulation Hardware and select the &amp;#39;Enable portable word sizes&amp;#39; option for ERT based targets, this will disable the preprocessor word size checks.&amp;#34;&#xD;&#xA;   41   #endif   42      43   #if ( UINT_MAX != (0xFFFFU) ) || ( INT_MAX != (0x7FFF) )&#xD;&#xA;   44   #error &amp;#34;Code was generated for compiler with different sized uint/int. Consider adjusting Emulation Hardware word size settings on the Hardware Implementation pane to match your compiler word sizes as defined in the compilers limits.h header file. Alternatively, you can select &amp;#39;None&amp;#39; for Emulation Hardware and select the &amp;#39;Enable portable word sizes&amp;#39; option for ERT based targets, this will disable the preprocessor word size checks.&amp;#34;&#xD;&#xA;   45   #endif   46      47   #if ( ULONG_MAX != (0xFFFFFFFFUL) ) || ( LONG_MAX != (0x7FFFFFFFL) )&#xD;&#xA;   48   #error &amp;#34;Code was generated for compiler with different sized ulong/long. Consider adjusting Emulation Hardware word size settings on the Hardware Implementation pane to match your compiler word sizes as defined in the compilers limits.h header file. Alternatively, you can select &amp;#39;None&amp;#39; for Emulation Hardware and select the &amp;#39;Enable portable word sizes&amp;#39; option for ERT based targets, this will disable the preprocessor word size checks.&amp;#34;&#xD;&#xA;   49   #endif   50      51   #ifndef __RTWTYPES_H__&#xD;&#xA;   52   #error This file requires rtwtypes.h to be included&#xD;&#xA;   53   #endif/* __RTWTYPES_H__ */   54      55   volatileexternuint16_TADC1BuffChannelA[1] ;&#xD;&#xA;   56   volatileexternuint16_T ADC1BuffChannelB[1];&#xD;&#xA;   57   volatileexternuint16_T* ADC1BuffChannelPtr;&#xD;&#xA;   58   externvolatileuint16_TMCHP_oc1up;&#xD;&#xA;   59      60   #endif/* RTW_HEADER_Explorer16_33FJ256GP710_DataScaling_private_h_ */   61      62   /* File trailer for Real-Time Workshop generated code.   63    *   64    * [EOF]   65    */   66&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;File:&lt;/th&gt;&#xA;          &lt;th&gt;Explorer16_33FJ256GP710_DataScaling_private.h&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>RTW Report - Explorer16_33FJ256GP710_DataScaling_types.h</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_types_h.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_types_h.html</guid>
      <description>&lt;h4 id=&#34;heading&#34;&gt;[]&lt;/h4&gt;&#xA;&lt;p&gt;]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1   /*--------------------------------------------------------------    2    *   Embedded Coder for Microchip dsPIC family.                *    3    *   Generate .c and .h files from Simulink model              *    4    *   and compile to .elf, .hex and .cof file that can be       *    5    *   flashed into the microcontroller                          *    6    *                                                             *    7    *      The Microchip name PIC, dsPIC, and MPLAB are           *    8    *      registered trademarks of Microchip Technology Inc.     *    9    *      MATLAB, Simulink, and Real-Time Workshop are           *   10    *      registered trademarks of The MathWorks, Inc.           *   11    *                                                             *   12    *  Blockset authors: L.Kerhuel, U.Kumar                       *   13    *  Microchip website: http://www.microchip.com/SimulinkBlocks *   14    *                                                             *   15    *--------------------------------------------------------------   16    */   17   /*   18    * File: Explorer16_33FJ256GP710_DataScaling_types.h   19    *   20    * Real-Time Workshop code generated for Simulink model Explorer16_33FJ256GP710_DataScaling.   21    *   22    * Model version                        : 1.51   23    * Real-Time Workshop file version      : 8.6 (R2014a) 27-Dec-2013   24    * Real-Time Workshop file generated on : Thu May 01 21:51:41 2014   25    * TLC version                          : 8.6 (Jan 30 2014)   26    * C source code generated on           : Thu May 01 21:51:42 2014   27    */   28   #ifndef RTW_HEADER_Explorer16_33FJ256GP710_DataScaling_types_h_&#xD;&#xA;   29   #define RTW_HEADER_Explorer16_33FJ256GP710_DataScaling_types_h_&#xD;&#xA;   30   #include&amp;#34;rtwtypes.h&amp;#34;   31      32   /* Parameters (auto storage) */   33   typedefstruct Parameters_Explorer16_33FJ256GP_ Parameters_Explorer16_33FJ256GP;&#xD;&#xA;   34      35   /* Forward declaration for rtModel */   36   typedefstruct tag_RTM_Explorer16_33FJ256GP710 RT_MODEL_Explorer16_33FJ256GP71;&#xD;&#xA;   37      38   #endif/* RTW_HEADER_Explorer16_33FJ256GP710_DataScaling_types_h_ */   39      40   /* File trailer for Real-Time Workshop generated code.   41    *   42    * [EOF]   43    */   44&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;File:&lt;/th&gt;&#xA;          &lt;th&gt;Explorer16_33FJ256GP710_DataScaling_types.h&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>RTW Report - Explorer16_33FJ256GP710_DataScaling.c</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_c.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_c.html</guid>
      <description>&lt;h4 id=&#34;heading&#34;&gt;[]&lt;/h4&gt;&#xA;&lt;p&gt;]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]][]]]]][]]][]]]]]]]]]][]]]]][]]][]][][][]]]]][]][]]]][]][]]]]][]]]]]]][]]][]]]]]]]]]]]]]][]]]]]]]]]]]]]]]]]]]]]]][]]][]]][]]]]]]]]]]]]]]]]]]]]]]]&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#099&#34;&gt;1&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*--------------------------------------------------------------&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;2&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   Embedded Coder &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; Microchip dsPIC family.                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;3&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   Generate .c and .h files from Simulink model              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;4&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   and compile to .elf, .hex and .cof file that can be       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;5&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   flashed into the microcontroller                          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;6&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;7&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;      The Microchip name PIC, dsPIC, and MPLAB are           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;8&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;      registered trademarks of Microchip Technology Inc.     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;9&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;      MATLAB, Simulink, and Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop are           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;10&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;      registered trademarks of The MathWorks, Inc.           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;11&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;12&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;  Blockset authors: L.Kerhuel, U.Kumar                       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;13&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;  Microchip website: http:&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;//&lt;/span&gt;www.microchip.com&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&lt;/span&gt;SimulinkBlocks &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;14&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;15&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*--------------------------------------------------------------&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;16&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;17&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;18&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; File: Explorer16_33FJ256GP710_DataScaling.c   &lt;span style=&#34;color:#099&#34;&gt;19&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;20&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop code generated &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; Simulink model Explorer16_33FJ256GP710_DataScaling.   &lt;span style=&#34;color:#099&#34;&gt;21&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;22&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Model version                        : &lt;span style=&#34;color:#099&#34;&gt;1.51&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;23&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop file version      : &lt;span style=&#34;color:#099&#34;&gt;8.6&lt;/span&gt; (R2014a) &lt;span style=&#34;color:#099&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Dec&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#099&#34;&gt;2013&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;24&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop file generated on : Thu May &lt;span style=&#34;color:#099&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;21&lt;/span&gt;:&lt;span style=&#34;color:#099&#34;&gt;51&lt;/span&gt;:&lt;span style=&#34;color:#099&#34;&gt;41&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;2014&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;25&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; TLC version                          : &lt;span style=&#34;color:#099&#34;&gt;8.6&lt;/span&gt; (Jan &lt;span style=&#34;color:#099&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;2014&lt;/span&gt;)   &lt;span style=&#34;color:#099&#34;&gt;26&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; C source code generated on           : Thu May &lt;span style=&#34;color:#099&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;21&lt;/span&gt;:&lt;span style=&#34;color:#099&#34;&gt;51&lt;/span&gt;:&lt;span style=&#34;color:#099&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;2014&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;27&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;28&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;29&lt;/span&gt;   #include&amp;#34;Explorer16_33FJ256GP710_DataScaling.h&amp;#34;   &lt;span style=&#34;color:#099&#34;&gt;30&lt;/span&gt;   #include&amp;#34;Explorer16_33FJ256GP710_DataScaling_private.h&amp;#34;   &lt;span style=&#34;color:#099&#34;&gt;31&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;32&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Block signals (auto storage) &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;33&lt;/span&gt;   BlockIO_Explorer16_33FJ256GP710Explorer16_33FJ256GP710_DataS_B;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;34&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;35&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;time model &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;36&lt;/span&gt;   RT_MODEL_Explorer16_33FJ256GP71Explorer16_33FJ256GP710_Data_M_;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;37&lt;/span&gt;   RT_MODEL_Explorer16_33FJ256GP71 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;constExplorer16_33FJ256GP710_Data_M =&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;38&lt;/span&gt;     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;Explorer16_33FJ256GP710_Data_M_;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;39&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;40&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Model step &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;41&lt;/span&gt;   voidExplorer16_33FJ256GP710_DataScaling_step(void)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;42&lt;/span&gt;   {   &lt;span style=&#34;color:#099&#34;&gt;43&lt;/span&gt;   uint16_T u0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;44&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;45&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; MCHP_ADC Block &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; ADC &lt;span style=&#34;color:#099&#34;&gt;1&lt;/span&gt;: &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;Root&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;/&lt;/span&gt;Potentiometer &lt;span style=&#34;color:#099&#34;&gt;12&lt;/span&gt; bits, unsigned right aligned&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&lt;/span&gt;Output &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;46&lt;/span&gt;   Explorer16_33FJ256GP710_DataS_B.Pot = ADC1BuffChannelA[&lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;47&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;48&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Gain: &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;Root&amp;gt;/Scaling&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;49&lt;/span&gt;     u0 = (uint16_T)((uint32_T)Explorer16_33FJ256GP710_DataS_P.Scaling_Gain &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;50&lt;/span&gt;   Explorer16_33FJ256GP710_DataS_B.Pot &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;13&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;51&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;52&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Saturate: &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;Root&amp;gt;/Saturation [5% 95%] of OC1max&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;53&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;if&lt;/span&gt; (u0 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; Explorer16_33FJ256GP710_DataS_P.Saturation595ofOC1max_UpperSat) {   &lt;span style=&#34;color:#099&#34;&gt;54&lt;/span&gt;   Explorer16_33FJ256GP710_DataS_B.Saturation595ofOC1max =&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;55&lt;/span&gt;   Explorer16_33FJ256GP710_DataS_P.Saturation595ofOC1max_UpperSat;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;56&lt;/span&gt;   }&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;elseif&lt;/span&gt; (u0 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; Explorer16_33FJ256GP710_DataS_P.Saturation595ofOC1max_LowerSat)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;57&lt;/span&gt;   {   &lt;span style=&#34;color:#099&#34;&gt;58&lt;/span&gt;   Explorer16_33FJ256GP710_DataS_B.Saturation595ofOC1max =&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;59&lt;/span&gt;   Explorer16_33FJ256GP710_DataS_P.Saturation595ofOC1max_LowerSat;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;60&lt;/span&gt;   }&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;else&lt;/span&gt;{   &lt;span style=&#34;color:#099&#34;&gt;61&lt;/span&gt;   Explorer16_33FJ256GP710_DataS_B.Saturation595ofOC1max = u0;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;62&lt;/span&gt;   }   &lt;span style=&#34;color:#099&#34;&gt;63&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;64&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; End of Saturate: &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;Root&amp;gt;/Saturation [5% 95%] of OC1max&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;65&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;66&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; S&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Function &amp;#34;dsPIC_PWM_OC&amp;#34; Block: &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;Root&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;/&lt;/span&gt;Output Compare &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt; SW OC1max = &lt;span style=&#34;color:#099&#34;&gt;2199&lt;/span&gt; Correspond to Period set: &lt;span style=&#34;color:#099&#34;&gt;1&lt;/span&gt;ms &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;67&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;if&lt;/span&gt; (Explorer16_33FJ256GP710_DataS_B.Saturation595ofOC1max &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;) {   &lt;span style=&#34;color:#099&#34;&gt;68&lt;/span&gt;       _OC1IE = &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;69&lt;/span&gt;       OC1CON = &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;x00;                     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; turn off OC &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;70&lt;/span&gt;       LATDbits.LATD0 = &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;71&lt;/span&gt;   }&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;elseif&lt;/span&gt; (Explorer16_33FJ256GP710_DataS_B.Saturation595ofOC1max &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;= &lt;span style=&#34;color:#099&#34;&gt;20200&lt;/span&gt;)&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt;&#x9;If up time is greater than period &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;72&lt;/span&gt;   {   &lt;span style=&#34;color:#099&#34;&gt;73&lt;/span&gt;       _OC1IE = &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;74&lt;/span&gt;       OC1CON = &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;x00;                     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; turn off OC &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;75&lt;/span&gt;       LATDbits.LATD0 = &lt;span style=&#34;color:#099&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;76&lt;/span&gt;   }&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;else&lt;/span&gt;{   &lt;span style=&#34;color:#099&#34;&gt;77&lt;/span&gt;   MCHP_oc1up = Explorer16_33FJ256GP710_DataS_B.Saturation595ofOC1max;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;78&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;if&lt;/span&gt; (_OC1IE &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;) {   &lt;span style=&#34;color:#099&#34;&gt;79&lt;/span&gt;         OC1CON = &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;x05;                   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; turn on OC &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;80&lt;/span&gt;         _OC1IE = &lt;span style=&#34;color:#099&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;81&lt;/span&gt;   }   &lt;span style=&#34;color:#099&#34;&gt;82&lt;/span&gt;   }   &lt;span style=&#34;color:#099&#34;&gt;83&lt;/span&gt;   }   &lt;span style=&#34;color:#099&#34;&gt;84&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;85&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Model initialize &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;86&lt;/span&gt;   voidExplorer16_33FJ256GP710_DataScaling_initialize(void)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;87&lt;/span&gt;   {   &lt;span style=&#34;color:#099&#34;&gt;88&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Registration code &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;89&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;90&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; initialize error status &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;91&lt;/span&gt;     rtmSetErrorStatus(Explorer16_33FJ256GP710_Data_M, (NULL));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;92&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;93&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; block I&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&lt;/span&gt;O &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;94&lt;/span&gt;     (void) memset(((void &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;Explorer16_33FJ256GP710_DataS_B), &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;95&lt;/span&gt;   sizeof(BlockIO_Explorer16_33FJ256GP710));&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;96&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;97&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; S&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Function &amp;#34;Microchip MASTER&amp;#34; initialization Block: &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;Root&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;/&lt;/span&gt;Microchip Master &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;98&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;99&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Start &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; S&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Function (MCHP_OC_SW): &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;Root&amp;gt;/Output Compare - SW OC1max = 2199 Correspond to Period set: 1ms&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;100&lt;/span&gt;     OC1CON = &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;x05;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#099&#34;&gt;101&lt;/span&gt;     &lt;span style=&#34;color:#099&#34;&gt;102&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Set&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;up Output Capture Interruption &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;103&lt;/span&gt;     _OC1IF = &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#099&#34;&gt;104&lt;/span&gt;     _OC1IP = &lt;span style=&#34;color:#099&#34;&gt;3&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#099&#34;&gt;105&lt;/span&gt;     _OC1IE = &lt;span style=&#34;color:#099&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#099&#34;&gt;106&lt;/span&gt;     &lt;span style=&#34;color:#099&#34;&gt;107&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; MCHP_ADC Block &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; ADC &lt;span style=&#34;color:#099&#34;&gt;1&lt;/span&gt;: &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;Root&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;/&lt;/span&gt;Potentiometer &lt;span style=&#34;color:#099&#34;&gt;12&lt;/span&gt; bits, unsigned right aligned&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&lt;/span&gt;Initialize &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;108&lt;/span&gt;     AD1CHS0 = &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;x05;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#099&#34;&gt;109&lt;/span&gt;     AD1CON3 = &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;x0D;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#099&#34;&gt;110&lt;/span&gt;     AD1CON2 = &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;x00;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#099&#34;&gt;111&lt;/span&gt;     AD1CON1 = &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;x8484;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#099&#34;&gt;112&lt;/span&gt;     IPC2 = (IPC2 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;20480&lt;/span&gt; );              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt;Interrupt Priority : &lt;span style=&#34;color:#099&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;113&lt;/span&gt;     _AD1IF = &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#099&#34;&gt;114&lt;/span&gt;     _AD1IE = &lt;span style=&#34;color:#099&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#099&#34;&gt;115&lt;/span&gt;   }  &lt;span style=&#34;color:#099&#34;&gt;116&lt;/span&gt;     &lt;span style=&#34;color:#099&#34;&gt;117&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; File trailer &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop generated code.  &lt;span style=&#34;color:#099&#34;&gt;118&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;119&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; [EOF]  &lt;span style=&#34;color:#099&#34;&gt;120&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;121&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;File:&lt;/th&gt;&#xA;          &lt;th&gt;Explorer16_33FJ256GP710_DataScaling.c&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>RTW Report - Explorer16_33FJ256GP710_DataScaling.h</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_h.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_h.html</guid>
      <description>&lt;h4 id=&#34;heading&#34;&gt;[]&lt;/h4&gt;&#xA;&lt;p&gt;]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]][]]]]][][]][][]]]]]]][]][]]][]][]]][]][]]]]]]][]]]]][][]]]]][]]]][]][]]]][][]]]]]]]]]]]]]]]]][]]]]]]]]]&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-matlab&#34; data-lang=&#34;matlab&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#099&#34;&gt;1&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*--------------------------------------------------------------&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;2&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   Embedded Coder &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; Microchip dsPIC family.                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;3&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   Generate .c and .h files from Simulink model              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;4&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   and compile to .elf, .hex and .cof file that can be       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;5&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   flashed into the microcontroller                          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;6&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;7&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;      The Microchip name PIC, dsPIC, and MPLAB are           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;8&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;      registered trademarks of Microchip Technology Inc.     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;    &lt;span style=&#34;color:#099&#34;&gt;9&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;      MATLAB, Simulink, and Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop are           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;10&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;      registered trademarks of The MathWorks, Inc.           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;11&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;12&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;  Blockset authors: L.Kerhuel, U.Kumar                       &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;13&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;  Microchip website: http:&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;//&lt;/span&gt;www.microchip.com&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&lt;/span&gt;SimulinkBlocks &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;14&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;                                                             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;15&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*--------------------------------------------------------------&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;16&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;17&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;18&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; File: Explorer16_33FJ256GP710_DataScaling.h   &lt;span style=&#34;color:#099&#34;&gt;19&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;20&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop code generated &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; Simulink model Explorer16_33FJ256GP710_DataScaling.   &lt;span style=&#34;color:#099&#34;&gt;21&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;22&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Model version                        : &lt;span style=&#34;color:#099&#34;&gt;1.51&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;23&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop file version      : &lt;span style=&#34;color:#099&#34;&gt;8.6&lt;/span&gt; (R2014a) &lt;span style=&#34;color:#099&#34;&gt;27&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Dec&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#099&#34;&gt;2013&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;24&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop file generated on : Thu May &lt;span style=&#34;color:#099&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;21&lt;/span&gt;:&lt;span style=&#34;color:#099&#34;&gt;51&lt;/span&gt;:&lt;span style=&#34;color:#099&#34;&gt;41&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;2014&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;25&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; TLC version                          : &lt;span style=&#34;color:#099&#34;&gt;8.6&lt;/span&gt; (Jan &lt;span style=&#34;color:#099&#34;&gt;30&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;2014&lt;/span&gt;)   &lt;span style=&#34;color:#099&#34;&gt;26&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; C source code generated on           : Thu May &lt;span style=&#34;color:#099&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;21&lt;/span&gt;:&lt;span style=&#34;color:#099&#34;&gt;51&lt;/span&gt;:&lt;span style=&#34;color:#099&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#099&#34;&gt;2014&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;27&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;28&lt;/span&gt;   #ifndef RTW_HEADER_Explorer16_33FJ256GP710_DataScaling_h_&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;29&lt;/span&gt;   #define RTW_HEADER_Explorer16_33FJ256GP710_DataScaling_h_&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;30&lt;/span&gt;   #include&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;stddef.h&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;31&lt;/span&gt;   #include&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;string.h&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;32&lt;/span&gt;   #ifndef Explorer16_33FJ256GP710_DataScaling_COMMON_INCLUDES_&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;33&lt;/span&gt;   #define Explorer16_33FJ256GP710_DataScaling_COMMON_INCLUDES_&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;34&lt;/span&gt;   #include&amp;#34;rtwtypes.h&amp;#34;   &lt;span style=&#34;color:#099&#34;&gt;35&lt;/span&gt;   #endif&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Explorer16_33FJ256GP710_DataScaling_COMMON_INCLUDES_ &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;36&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;37&lt;/span&gt;   #include&amp;#34;Explorer16_33FJ256GP710_DataScaling_types.h&amp;#34;   &lt;span style=&#34;color:#099&#34;&gt;38&lt;/span&gt;   #define FCY                            &lt;span style=&#34;color:#099&#34;&gt;2.02E+7&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;39&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;40&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Include &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; pic &lt;span style=&#34;color:#099&#34;&gt;33&lt;/span&gt;F &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;41&lt;/span&gt;   #include&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;p33Fxxxx.h&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;42&lt;/span&gt;   #include&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;libpic30.h&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;/*&lt;/span&gt; For possible use with C &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;function&lt;/span&gt; Call block (delay_ms or delay_us functions might be used by few peripherals) &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;43&lt;/span&gt;   #include&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;libq.h&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;/*&lt;/span&gt; For possible use with C &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;function&lt;/span&gt; Call block &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;44&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;45&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Macros &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; accessing &lt;span style=&#34;color:#0086b3&#34;&gt;real&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;time model data structure &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;46&lt;/span&gt;   #ifndef rtmGetErrorStatus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;47&lt;/span&gt;   #define rtmGetErrorStatus(rtm)        ((rtm)&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;errorStatus)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;48&lt;/span&gt;   #endif   &lt;span style=&#34;color:#099&#34;&gt;49&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;50&lt;/span&gt;   #ifndef rtmSetErrorStatus&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;51&lt;/span&gt;   #define rtmSetErrorStatus(rtm, val)   ((rtm)&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;errorStatus = (val))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;52&lt;/span&gt;   #endif   &lt;span style=&#34;color:#099&#34;&gt;53&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;54&lt;/span&gt;   #ifndef rtmGetStopRequested&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;55&lt;/span&gt;   #define rtmGetStopRequested(rtm)      ((void&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#099&#34;&gt;0&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;56&lt;/span&gt;   #endif   &lt;span style=&#34;color:#099&#34;&gt;57&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;58&lt;/span&gt;   #define Explorer16_33FJ256GP710_DataScaling_M (Explorer16_33FJ256GP710_Data_M)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;59&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;60&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Block signals (auto storage) &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;61&lt;/span&gt;   typedefstruct{   &lt;span style=&#34;color:#099&#34;&gt;62&lt;/span&gt;   uint16_T Saturation595ofOC1max;      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;Root&amp;gt;/Saturation [5% 95%] of OC1max&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;63&lt;/span&gt;   uint16_T Pot;                        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;Root&amp;gt;/Potentiometer 12 bits, unsigned right aligned&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;64&lt;/span&gt;   }BlockIO_Explorer16_33FJ256GP710;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;65&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;66&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Parameters (auto storage) &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;67&lt;/span&gt;   struct Parameters_Explorer16_33FJ256GP_ {   &lt;span style=&#34;color:#099&#34;&gt;68&lt;/span&gt;   uint16_T Saturation595ofOC1max_UpperSat;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Computed Parameter: Saturation595ofOC1max_UpperSat   &lt;span style=&#34;color:#099&#34;&gt;69&lt;/span&gt;                                              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Referenced by: &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;Root&amp;gt;/Saturation [5% 95%] of OC1max&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;70&lt;/span&gt;                                              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;71&lt;/span&gt;   uint16_T Saturation595ofOC1max_LowerSat;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Computed Parameter: Saturation595ofOC1max_LowerSat   &lt;span style=&#34;color:#099&#34;&gt;72&lt;/span&gt;                                              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Referenced by: &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;Root&amp;gt;/Saturation [5% 95%] of OC1max&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;73&lt;/span&gt;                                              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;74&lt;/span&gt;   uint16_T Scaling_Gain;               &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Computed Parameter: Scaling_Gain   &lt;span style=&#34;color:#099&#34;&gt;75&lt;/span&gt;                                           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Referenced by: &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;Root&amp;gt;/Scaling&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;76&lt;/span&gt;                                           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;77&lt;/span&gt;   };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;78&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;79&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;time Model Data Structure &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;80&lt;/span&gt;   struct tag_RTM_Explorer16_33FJ256GP710 {   &lt;span style=&#34;color:#099&#34;&gt;81&lt;/span&gt;   constchar_T &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;errorStatus;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;82&lt;/span&gt;   };&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;83&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;84&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Block parameters (auto storage) &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;85&lt;/span&gt;   externParameters_Explorer16_33FJ256GPExplorer16_33FJ256GP710_DataS_P;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;86&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;87&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Block signals (auto storage) &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;88&lt;/span&gt;   externBlockIO_Explorer16_33FJ256GP710Explorer16_33FJ256GP710_DataS_B;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;89&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;90&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Model entry point functions &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;91&lt;/span&gt;   externvoidExplorer16_33FJ256GP710_DataScaling_initialize(void);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;92&lt;/span&gt;   externvoidExplorer16_33FJ256GP710_DataScaling_step(void);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;93&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;94&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;time Model object &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;95&lt;/span&gt;   externRT_MODEL_Explorer16_33FJ256GP71 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;constExplorer16_33FJ256GP710_Data_M;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#099&#34;&gt;96&lt;/span&gt;      &lt;span style=&#34;color:#099&#34;&gt;97&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*-&lt;/span&gt;   &lt;span style=&#34;color:#099&#34;&gt;98&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; The generated code includes comments that allow you to trace directly   &lt;span style=&#34;color:#099&#34;&gt;99&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; back to the appropriate location in the model.  The basic format  &lt;span style=&#34;color:#099&#34;&gt;100&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; is &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;system&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;/&lt;/span&gt;block_name, where system is the system number (uniquely  &lt;span style=&#34;color:#099&#34;&gt;101&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; assigned by Simulink) and block_name is the name of the block.  &lt;span style=&#34;color:#099&#34;&gt;102&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;103&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Use the MATLAB hilite_system command to trace the generated code back  &lt;span style=&#34;color:#099&#34;&gt;104&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; to the model.  For example,  &lt;span style=&#34;color:#099&#34;&gt;105&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;106&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; hilite_system(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;S3&amp;gt;&amp;#39;&lt;/span&gt;)    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt; opens system &lt;span style=&#34;color:#099&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;107&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; hilite_system(&lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;S3&amp;gt;/Kp&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt; opens and selects block Kp which resides in S3  &lt;span style=&#34;color:#099&#34;&gt;108&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;109&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; Here is the system hierarchy &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; this model  &lt;span style=&#34;color:#099&#34;&gt;110&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;111&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;&amp;lt;Root&amp;gt;&amp;#39;&lt;/span&gt; : &lt;span style=&#34;color:#d14&#34;&gt;&amp;#39;Explorer16_33FJ256GP710_DataScaling&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;112&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;113&lt;/span&gt;   #endif&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; RTW_HEADER_Explorer16_33FJ256GP710_DataScaling_h_ &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;114&lt;/span&gt;     &lt;span style=&#34;color:#099&#34;&gt;115&lt;/span&gt;   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/*&lt;/span&gt; File trailer &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;for&lt;/span&gt; Real&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;-&lt;/span&gt;Time Workshop generated code.  &lt;span style=&#34;color:#099&#34;&gt;116&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;117&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*&lt;/span&gt; [EOF]  &lt;span style=&#34;color:#099&#34;&gt;118&lt;/span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;*/&lt;/span&gt;  &lt;span style=&#34;color:#099&#34;&gt;119&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;File:&lt;/th&gt;&#xA;          &lt;th&gt;Explorer16_33FJ256GP710_DataScaling.h&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>RTW Report - MCHP_ADC1_Interrupt.c</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/mchp_adc1_interrupt_c.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/mchp_adc1_interrupt_c.html</guid>
      <description>&lt;h4 id=&#34;heading&#34;&gt;[]&lt;/h4&gt;&#xA;&lt;p&gt;]]]][]]]]]]]]]]]]]]]]]]][]][]]]]]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1   #include&amp;#34;Explorer16_33FJ256GP710_DataScaling.h&amp;#34;    2   #include&amp;#34;Explorer16_33FJ256GP710_DataScaling_private.h&amp;#34;    3       4   volatileuint16_TADC1BuffChannelA[1];&#xD;&#xA;    5   void__attribute__((__interrupt__,__auto_psv__)) _T5Interrupt(void)&#xD;&#xA;    6   {    7     AD1CON1 = 0x84E4;                    /* Force bits 4-7 for automatic sampling */    8     _T5IF = 0;&#xD;&#xA;    9   }   10      11   void__attribute__((__interrupt__,__auto_psv__)) _ADC1Interrupt(void)&#xD;&#xA;   12   {   13   ADC1BuffChannelA[0] = ADC1BUF0;      /* Copy value from ADC buffer  */   14     AD1CON1 = 0x0484;                    /* Must cancel current sampling */   15     AD1CON1 = 0x8484;                    /* Re-set ADC configuration for triggered sampling */   16      17   {   18   externvolatileunsignedintContinueTimeStep;&#xD;&#xA;   19   ContinueTimeStep++;&#xD;&#xA;   20       _AD1IF = 0;                        /* Re-enable interrupt */   21   }   22   }   23&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;File:&lt;/th&gt;&#xA;          &lt;th&gt;MCHP_ADC1_Interrupt.c&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>RTW Report - MCHP_OC1_Interrupt.c</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/mchp_oc1_interrupt_c.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/mchp_oc1_interrupt_c.html</guid>
      <description>&lt;h4 id=&#34;heading&#34;&gt;[]&lt;/h4&gt;&#xA;&lt;p&gt;]]]][]]]]][]]]]]]]]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1   #include&amp;#34;Explorer16_33FJ256GP710_DataScaling.h&amp;#34;    2   #include&amp;#34;Explorer16_33FJ256GP710_DataScaling_private.h&amp;#34;    3       4   volatileuint16_TMCHP_oc1up;&#xD;&#xA;    5       6   /* Implement Output Compare Interrupts if required */    7   void__attribute__((__interrupt__,__auto_psv__)) _OC1Interrupt(void)&#xD;&#xA;    8   {    9     _OC1IF = 0;&#xD;&#xA;   10     OC1R = (OC1R + 20200) ;&#xD;&#xA;   11     OC1RS = (OC1R + MCHP_oc1up) ;&#xD;&#xA;   12   }   13&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;File:&lt;/th&gt;&#xA;          &lt;th&gt;MCHP_OC1_Interrupt.c&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>RTW Report - rtmodel.h</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/rtmodel_h.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/rtmodel_h.html</guid>
      <description>&lt;h4 id=&#34;heading&#34;&gt;[]&lt;/h4&gt;&#xA;&lt;p&gt;]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1   /*--------------------------------------------------------------    2    *   Embedded Coder for Microchip dsPIC family.                *    3    *   Generate .c and .h files from Simulink model              *    4    *   and compile to .elf, .hex and .cof file that can be       *    5    *   flashed into the microcontroller                          *    6    *                                                             *    7    *      The Microchip name PIC, dsPIC, and MPLAB are           *    8    *      registered trademarks of Microchip Technology Inc.     *    9    *      MATLAB, Simulink, and Real-Time Workshop are           *   10    *      registered trademarks of The MathWorks, Inc.           *   11    *                                                             *   12    *  Blockset authors: L.Kerhuel, U.Kumar                       *   13    *  Microchip website: http://www.microchip.com/SimulinkBlocks *   14    *                                                             *   15    *--------------------------------------------------------------   16    */   17   /*   18    * File: rtmodel.h   19    *   20    * Real-Time Workshop code generated for Simulink model Explorer16_33FJ256GP710_DataScaling.   21    *   22    * Model version                        : 1.51   23    * Real-Time Workshop file version      : 8.6 (R2014a) 27-Dec-2013   24    * Real-Time Workshop file generated on : Thu May 01 21:51:41 2014   25    * TLC version                          : 8.6 (Jan 30 2014)   26    * C source code generated on           : Thu May 01 21:51:42 2014   27    */   28   #ifndef RTW_HEADER_rtmodel_h_&#xD;&#xA;   29   #define RTW_HEADER_rtmodel_h_&#xD;&#xA;   30   #include&amp;#34;Explorer16_33FJ256GP710_DataScaling.h&amp;#34;   31   #endif/* RTW_HEADER_rtmodel_h_ */   32      33   /* File trailer for Real-Time Workshop generated code.   34    *   35    * [EOF]   36    */   37&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;File:&lt;/th&gt;&#xA;          &lt;th&gt;rtmodel.h&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>RTW Report - rtwtypes.h</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/rtwtypes_h.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/rtwtypes_h.html</guid>
      <description>&lt;h4 id=&#34;heading&#34;&gt;[]&lt;/h4&gt;&#xA;&lt;p&gt;]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1   /*--------------------------------------------------------------    2    *   Embedded Coder for Microchip dsPIC family.                *    3    *   Generate .c and .h files from Simulink model              *    4    *   and compile to .elf, .hex and .cof file that can be       *    5    *   flashed into the microcontroller                          *    6    *                                                             *    7    *      The Microchip name PIC, dsPIC, and MPLAB are           *    8    *      registered trademarks of Microchip Technology Inc.     *    9    *      MATLAB, Simulink, and Real-Time Workshop are           *   10    *      registered trademarks of The MathWorks, Inc.           *   11    *                                                             *   12    *  Blockset authors: L.Kerhuel, U.Kumar                       *   13    *  Microchip website: http://www.microchip.com/SimulinkBlocks *   14    *                                                             *   15    *--------------------------------------------------------------   16    */   17   /*   18    * File: rtwtypes.h   19    *   20    * Real-Time Workshop code generated for Simulink model Explorer16_33FJ256GP710_DataScaling.   21    *   22    * Model version                        : 1.51   23    * Real-Time Workshop file version      : 8.6 (R2014a) 27-Dec-2013   24    * Real-Time Workshop file generated on : Thu May 01 21:51:41 2014   25    * TLC version                          : 8.6 (Jan 30 2014)   26    * C source code generated on           : Thu May 01 21:51:42 2014   27    */   28      29   #ifndef __RTWTYPES_H__&#xD;&#xA;   30   #define __RTWTYPES_H__&#xD;&#xA;   31      32   /* Logical type definitions */   33   #if (!defined(__cplusplus))&#xD;&#xA;   34   #ifndef false&#xD;&#xA;   35   #define false                       (0U)&#xD;&#xA;   36   #endif   37      38   #ifndef true&#xD;&#xA;   39   #define true                        (1U)&#xD;&#xA;   40   #endif   41   #endif   42      43   #define __TMWTYPES__&#xD;&#xA;   44      45   /*=======================================================================*   46    * Target hardware information   47    *   Device type: Generic-&amp;gt;Custom   48    *   Number of bits:     char:   8    short:   16    int:  16   49    *                       long:  32   50    *                       native word size:  16   51    *   Byte ordering: LittleEndian   52    *   Signed integer division rounds to: Zero   53    *   Shift right on a signed integer as arithmetic shift: on   54    *=======================================================================*/   55      56   /*=======================================================================*   57    * Fixed width word size data types:                                     *   58    *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *   59    *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *   60    *   real32_T, real64_T           - 32 and 64 bit floating point numbers *   61    *=======================================================================*/   62   typedefsignedcharint8_T;&#xD;&#xA;   63   typedefunsignedcharuint8_T;&#xD;&#xA;   64   typedefintint16_T;&#xD;&#xA;   65   typedefunsignedintuint16_T;&#xD;&#xA;   66   typedeflongint32_T;&#xD;&#xA;   67   typedefunsignedlonguint32_T;&#xD;&#xA;   68   typedeffloatreal32_T;&#xD;&#xA;   69   typedefdoublereal64_T;&#xD;&#xA;   70      71   /*===========================================================================*   72    * Generic type definitions: real_T, time_T, boolean_T, int_T, uint_T,       *   73    *                           ulong_T, char_T and byte_T.                     *   74    *===========================================================================*/   75   typedefdoublereal_T;&#xD;&#xA;   76   typedefdoubletime_T;&#xD;&#xA;   77   typedefunsignedcharboolean_T;&#xD;&#xA;   78   typedefintint_T;&#xD;&#xA;   79   typedefunsignedintuint_T;&#xD;&#xA;   80   typedefunsignedlongulong_T;&#xD;&#xA;   81   typedefcharchar_T;&#xD;&#xA;   82   typedefunsignedcharuchar_T;&#xD;&#xA;   83   typedefchar_Tbyte_T;&#xD;&#xA;   84      85   /*===========================================================================*   86    * Complex number type definitions                                           *   87    *===========================================================================*/   88   #define CREAL_T&#xD;&#xA;   89      90   typedefstruct{   91   real32_T re;&#xD;&#xA;   92   real32_T im;&#xD;&#xA;   93   }creal32_T;&#xD;&#xA;   94      95   typedefstruct{   96   real64_T re;&#xD;&#xA;   97   real64_T im;&#xD;&#xA;   98   }creal64_T;&#xD;&#xA;   99     100   typedefstruct{  101   real_T re;&#xD;&#xA;  102   real_T im;&#xD;&#xA;  103   }creal_T;&#xD;&#xA;  104     105   #define CINT8_T&#xD;&#xA;  106     107   typedefstruct{  108   int8_T re;&#xD;&#xA;  109   int8_T im;&#xD;&#xA;  110   }cint8_T;&#xD;&#xA;  111     112   #define CUINT8_T&#xD;&#xA;  113     114   typedefstruct{  115   uint8_T re;&#xD;&#xA;  116   uint8_T im;&#xD;&#xA;  117   }cuint8_T;&#xD;&#xA;  118     119   #define CINT16_T&#xD;&#xA;  120     121   typedefstruct{  122   int16_T re;&#xD;&#xA;  123   int16_T im;&#xD;&#xA;  124   }cint16_T;&#xD;&#xA;  125     126   #define CUINT16_T&#xD;&#xA;  127     128   typedefstruct{  129   uint16_T re;&#xD;&#xA;  130   uint16_T im;&#xD;&#xA;  131   }cuint16_T;&#xD;&#xA;  132     133   #define CINT32_T&#xD;&#xA;  134     135   typedefstruct{  136   int32_T re;&#xD;&#xA;  137   int32_T im;&#xD;&#xA;  138   }cint32_T;&#xD;&#xA;  139     140   #define CUINT32_T&#xD;&#xA;  141     142   typedefstruct{  143   uint32_T re;&#xD;&#xA;  144   uint32_T im;&#xD;&#xA;  145   }cuint32_T;&#xD;&#xA;  146     147   /*=======================================================================*  148    * Min and Max:                                                          *  149    *   int8_T, int16_T, int32_T     - signed 8, 16, or 32 bit integers     *  150    *   uint8_T, uint16_T, uint32_T  - unsigned 8, 16, or 32 bit integers   *  151    *=======================================================================*/  152   #define MAX_int8_T                     ((int8_T)(127))&#xD;&#xA;  153   #define MIN_int8_T                     ((int8_T)(-128))&#xD;&#xA;  154   #define MAX_uint8_T                    ((uint8_T)(255U))&#xD;&#xA;  155   #define MIN_uint8_T                    ((uint8_T)(0U))&#xD;&#xA;  156   #define MAX_int16_T                    ((int16_T)(32767))&#xD;&#xA;  157   #define MIN_int16_T                    ((int16_T)(-32768))&#xD;&#xA;  158   #define MAX_uint16_T                   ((uint16_T)(65535U))&#xD;&#xA;  159   #define MIN_uint16_T                   ((uint16_T)(0U))&#xD;&#xA;  160   #define MAX_int32_T                    ((int32_T)(2147483647))&#xD;&#xA;  161   #define MIN_int32_T                    ((int32_T)(-2147483647-1))&#xD;&#xA;  162   #define MAX_uint32_T                   ((uint32_T)(0xFFFFFFFFU))&#xD;&#xA;  163   #define MIN_uint32_T                   ((uint32_T)(0U))&#xD;&#xA;  164     165   /* Block D-Work pointer type */  166   typedefvoid * pointer_T;&#xD;&#xA;  167     168   /* Simulink specific types */  169   #ifndef __ZERO_CROSSING_TYPES__&#xD;&#xA;  170   #define __ZERO_CROSSING_TYPES__&#xD;&#xA;  171     172   /* Trigger directions: falling, either, and rising */  173   typedefenum{  174     FALLING_ZERO_CROSSING = -1,&#xD;&#xA;  175     ANY_ZERO_CROSSING = 0,&#xD;&#xA;  176     RISING_ZERO_CROSSING = 1&#xD;&#xA;  177   }ZCDirection;&#xD;&#xA;  178     179   /* Previous state of a trigger signal */  180   typedefuint8_TZCSigState;&#xD;&#xA;  181     182   /* Initial value of a trigger zero crossing signal */  183   #define UNINITIALIZED_ZCSIG            0x03U&#xD;&#xA;  184   #define NEG_ZCSIG                      0x02U&#xD;&#xA;  185   #define POS_ZCSIG                      0x01U&#xD;&#xA;  186   #define ZERO_ZCSIG                     0x00U&#xD;&#xA;  187     188   /* Current state of a trigger signal */  189   typedefenum{  190     FALLING_ZCEVENT = -1,&#xD;&#xA;  191     NO_ZCEVENT = 0,&#xD;&#xA;  192     RISING_ZCEVENT = 1&#xD;&#xA;  193   }ZCEventType;&#xD;&#xA;  194     195   #endif/* __ZERO_CROSSING_TYPES__ */  196   #endif/* __RTWTYPES_H__ */  197     198   /* File trailer for Real-Time Workshop generated code.  199    *  200    * [EOF]  201    */  202&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;File:&lt;/th&gt;&#xA;          &lt;th&gt;rtwtypes.h&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Static Code Metrics Report for Explorer16_33FJ256GP710_DataScaling</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_metrics.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_metrics.html</guid>
      <description>&lt;p&gt;Static Code Metrics Report for Explorer16_33FJ256GP710_DataScaling&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;hilite_warning.png&#34; alt=&#34;&#34;&gt;&#xA;Static Code Metrics report is not generated. On the Configuration Parameters &amp;gt; Code Generation &amp;gt; Report pane, select Static code metrics. On the model diagram window, select Code &amp;gt; C/C++ Code &amp;gt; Code Generation Report &amp;gt; Open Model Report or rebuild the model.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Traceability Report for Explorer16_33FJ256GP710_DataScaling</title>
      <link>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_trace.html</link>
      <pubDate>Thu, 16 Oct 2025 00:00:00 +0000</pubDate>
      <guid>/figs/ressources/explorer16_33fj256gp710_datascaling.x/src/html/explorer16_33fj256gp710_datascaling_trace.html</guid>
      <description>&lt;h3 id=&#34;table-of-contents&#34;&gt;Table of Contents&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Eliminated / Virtual Blocks]&lt;/li&gt;&#xA;&lt;li&gt;Traceable Simulink Blocks / Stateflow Objects / MATLAB Functions]&lt;/li&gt;&#xA;&lt;li&gt;Explorer16_33FJ256GP710_DataScaling]&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;eliminated--virtual-blocks&#34;&gt;Eliminated / Virtual Blocks]&lt;/h3&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Block Name&lt;/th&gt;&#xA;          &lt;th&gt;Comment&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;Root&gt;/Compiler Options&lt;/td&gt;&#xA;          &lt;td&gt;Not traceable&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;Root&gt;/Data Sheet&lt;/td&gt;&#xA;          &lt;td&gt;Not traceable&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h3 id=&#34;traceable-simulink-blocks--stateflow-objects--matlab-functions&#34;&gt;Traceable Simulink Blocks / Stateflow Objects / MATLAB Functions]&lt;/h3&gt;&#xA;&lt;h4 id=&#34;root-system-explorer16_33fj256gp710_datascaling&#34;&gt;Root system: [Explorer16_33FJ256GP710_DataScaling]]&lt;/h4&gt;&#xA;&lt;p&gt;[][][][][][][][][][][][][][][][][][][]&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Object Name&lt;/th&gt;&#xA;          &lt;th&gt;Code Location&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;Root&gt;/Microchip Master&lt;/td&gt;&#xA;          &lt;td&gt;Explorer16_33FJ256GP710_DataScaling.c:97&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;Root&gt;/Output Compare - SW OC1max = 2199 Correspond to Period set: 1ms&lt;/td&gt;&#xA;          &lt;td&gt;Explorer16_33FJ256GP710_DataScaling.c:66&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;Root&gt;/Potentiometer 12 bits, unsigned right aligned&lt;/td&gt;&#xA;          &lt;td&gt;Explorer16_33FJ256GP710_DataScaling.h:63&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;Root&gt;/Saturation [5% 95%] of OC1max&lt;/td&gt;&#xA;          &lt;td&gt;Explorer16_33FJ256GP710_DataScaling.c:52&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;&lt;Root&gt;/Scaling&lt;/td&gt;&#xA;          &lt;td&gt;Explorer16_33FJ256GP710_DataScaling.c:48&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
  </channel>
</rss>
